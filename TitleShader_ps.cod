//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer CONSTANT_BUFFER
// {
//
//   float3 iResolution;                // Offset:    0 Size:    12
//   float iTime;                       // Offset:   12 Size:     4
//   float brightness;                  // Offset:   16 Size:     4
//   float ray_brightness;              // Offset:   20 Size:     4
//   float gamma;                       // Offset:   24 Size:     4
//   float spot_brightness;             // Offset:   28 Size:     4
//   float ray_density;                 // Offset:   32 Size:     4
//   float curvature;                   // Offset:   36 Size:     4
//   float red;                         // Offset:   40 Size:     4
//   float green;                       // Offset:   44 Size:     4
//   float blue;                        // Offset:   48 Size:     4
//   float4 material_color;             // Offset:   64 Size:    16
//   float dummy1;                      // Offset:   80 Size:     4 [unused]
//   float dummy2;                      // Offset:   84 Size:     4 [unused]
//   float dummy3;                      // Offset:   88 Size:     4 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// DecalSampler                      sampler      NA          NA             s0      1 
// iChannel0                         texture  float4          2d             t0      1 
// CONSTANT_BUFFER                   cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
// SV_TARGET                1   xyzw        1   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[5], immediateIndexed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_input_ps linear v1.xy
dcl_output o0.xyzw
dcl_output o1.xyzw
dcl_temps 3
mul r0.x, cb0[0].w, l(-0.030000)
mul r0.yz, v1.xxyx, cb0[0].xxyx
div r0.yz, r0.yyzy, cb0[0].xxyx
add r1.yz, r0.yyzy, l(0.000000, -0.500000, -0.500000, 0.000000)
div r0.y, cb0[0].x, cb0[0].y
mul r1.x, r0.y, r1.y
mad r0.y, cb0[2].y, l(0.050000), l(0.000100)
mul r0.yz, r0.yyyy, r1.zzxz
dp2 r0.w, r0.yzyy, r0.yzyy
sqrt r1.x, r0.w
rsq r0.w, r0.w
mul r0.yz, r0.wwww, r0.yyzy
mad r0.xy, r0.yzyy, l(0.500000, 0.500000, 0.000000, 0.000000), r0.xxxx
mul r0.yz, r0.xxyx, cb0[2].xxxx
mad r0.xw, r0.yyyz, l(0.100000, 0.000000, 0.000000, 0.200000), r1.xxxx
mul r0.zw, r0.yyyw, l(0.000000, 0.000000, 0.125000, 0.250000)
mov r1.yz, r0.zzwz
mov r1.w, l(2.000000)
mov r2.xy, l(0,1.000000,0,0)
loop 
  ge r2.z, r2.y, l(6.000000)
  breakc_nz r2.z
  mul r2.zw, r1.yyyz, l(0.000000, 0.000000, 0.010000, 0.010000)
  sample_indexable(texture2d)(float,float,float,float) r2.z, r2.zwzz, t0.yzxw, s0
  add r2.z, r2.z, l(-0.500000)
  add r2.z, r2.z, r2.z
  div r2.z, |r2.z|, r1.w
  add r2.x, r2.z, r2.x
  add r1.w, r1.w, r1.w
  add r2.zw, r1.yyyz, r1.yyyz
  dp2 r1.y, r2.zwzz, l(0.800000, -0.600000, 0.000000, 0.000000)
  dp2 r1.z, r2.zwzz, l(0.600000, 0.800000, 0.000000, 0.000000)
  add r2.y, r2.y, l(1.000000)
endloop 
mul r0.y, r2.x, cb0[2].x
mul r0.xy, r0.xyxx, l(0.250000, 0.125000, 0.000000, 0.000000)
mov r0.zw, r0.xxxy
mov r1.yzw, l(0,2.000000,0,1.000000)
loop 
  ge r2.y, r1.w, l(6.000000)
  breakc_nz r2.y
  mul r2.yz, r0.zzwz, l(0.000000, 0.010000, 0.010000, 0.000000)
  sample_indexable(texture2d)(float,float,float,float) r2.y, r2.yzyy, t0.yxzw, s0
  add r2.y, r2.y, l(-0.500000)
  add r2.y, r2.y, r2.y
  div r2.y, |r2.y|, r1.y
  add r1.z, r1.z, r2.y
  add r1.y, r1.y, r1.y
  add r2.yz, r0.zzwz, r0.zzwz
  dp2 r0.z, r2.yzyy, l(0.800000, -0.600000, 0.000000, 0.000000)
  dp2 r0.w, r2.yzyy, l(0.600000, 0.800000, 0.000000, 0.000000)
  add r1.w, r1.w, l(1.000000)
endloop 
mad r0.x, r1.z, cb0[2].x, r1.x
mad r0.z, r2.x, cb0[2].x, r1.x
add r0.y, -r1.z, r0.z
mul r0.xy, r0.xyxx, l(0.250000, 0.250000, 0.000000, 0.000000)
mov r0.zw, r0.xxxy
mov r1.yzw, l(0,2.000000,0,1.000000)
loop 
  ge r2.x, r1.w, l(6.000000)
  breakc_nz r2.x
  mul r2.xy, r0.zwzz, l(0.010000, 0.010000, 0.000000, 0.000000)
  sample_indexable(texture2d)(float,float,float,float) r2.x, r2.xyxx, t0.xyzw, s0
  add r2.x, r2.x, l(-0.500000)
  add r2.x, r2.x, r2.x
  div r2.x, |r2.x|, r1.y
  add r1.z, r1.z, r2.x
  add r1.y, r1.y, r1.y
  add r2.xy, r0.zwzz, r0.zwzz
  dp2 r0.z, r2.xyxx, l(0.800000, -0.600000, 0.000000, 0.000000)
  dp2 r0.w, r2.xyxx, l(0.600000, 0.800000, 0.000000, 0.000000)
  add r1.w, r1.w, l(1.000000)
endloop 
mad r0.x, cb0[1].z, l(0.020000), l(-0.100000)
add r0.y, r0.x, cb0[1].y
add r0.y, r0.y, l(0.001000)
add r0.y, -r0.x, r0.y
add r0.x, -r0.x, r1.z
div r0.y, l(1.000000, 1.000000, 1.000000, 1.000000), r0.y
mul_sat r0.x, r0.y, r0.x
mad r0.y, r0.x, l(-2.000000), l(3.000000)
mul r0.x, r0.x, r0.x
mul r0.x, r0.x, r0.y
sqrt r0.x, r0.x
div r2.xy, r0.xxxx, cb0[2].zwzz
div r2.z, r0.x, cb0[3].x
add_sat r0.xyz, -r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mul r0.w, r1.x, l(10.000000)
div r0.w, r0.w, cb0[2].y
mul r0.w, r0.w, l(200.000000)
div r0.w, r0.w, cb0[1].x
add r0.w, -r0.w, cb0[1].w
add r1.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mad_sat r0.xyz, r0.wwww, r1.xyzx, r0.xyzx
log r0.xyz, r0.xyzx
mul r0.xyz, r0.xyzx, l(1.700000, 1.700000, 1.700000, 0.000000)
exp r0.xyz, r0.xyzx
mul o0.x, r0.x, cb0[4].x
mov o0.yz, r0.yyzy
mov o0.w, l(1.000000)
mov o1.xyzw, l(0,0,0,0)
ret 
// Approximately 103 instruction slots used
