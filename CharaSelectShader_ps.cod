//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer CONSTANT_BUFFER
// {
//
//   float3 iResolution;                // Offset:    0 Size:    12
//   float iTime;                       // Offset:   12 Size:     4
//   float brightness;                  // Offset:   16 Size:     4 [unused]
//   float ray_brightness;              // Offset:   20 Size:     4 [unused]
//   float gamma;                       // Offset:   24 Size:     4 [unused]
//   float spot_brightness;             // Offset:   28 Size:     4 [unused]
//   float ray_density;                 // Offset:   32 Size:     4 [unused]
//   float curvature;                   // Offset:   36 Size:     4 [unused]
//   float red;                         // Offset:   40 Size:     4 [unused]
//   float green;                       // Offset:   44 Size:     4 [unused]
//   float blue;                        // Offset:   48 Size:     4 [unused]
//   float4 material_color;             // Offset:   64 Size:    16 [unused]
//   float dummy1;                      // Offset:   80 Size:     4 [unused]
//   float dummy2;                      // Offset:   84 Size:     4 [unused]
//   float dummy3;                      // Offset:   88 Size:     4 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// CONSTANT_BUFFER                   cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xy  
// TEXCOORD                 0   xy          1     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
// SV_TARGET                1   xyzw        1   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[1], immediateIndexed
dcl_input_ps_siv linear noperspective v0.xy, position
dcl_output o0.xyzw
dcl_output o1.xyzw
dcl_temps 11
add r0.y, -v0.y, cb0[0].y
add r0.z, cb0[0].w, l(-2.000000)
max r0.z, r0.z, l(0.000000)
mov r0.x, v0.x
div r1.xy, r0.xyxx, cb0[0].xyxx
add r1.z, -r1.y, l(1.000000)
mad r0.xy, r1.zxzz, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mul r2.xyz, r0.zzzz, l(0.740741, 0.200000, 0.125000, 0.000000)
sincos r2.yzw, null, r2.yyzy
mul r0.w, r2.y, l(0.200000)
sincos r3.x, r4.x, r0.w
mul r0.w, r0.x, r4.x
mul r0.x, r0.x, r3.x
mad r0.x, r4.x, r0.y, r0.x
mad r0.y, r3.x, r0.y, -r0.w
mad r2.yz, r2.zzwz, l(0.000000, 0.500000, 0.500000, 0.000000), l(0.000000, 1.500000, 0.500000, 0.000000)
mad r3.xyzw, r0.zzzz, l(0.250000, 0.740741, 0.740741, 0.740741), l(0.500000, -50.000000, -58.000000, -5.000000)
sincos null, r0.w, r3.x
mad r0.w, r0.w, l(0.500000), l(1.500000)
mul r4.xyzw, r0.zzzz, l(0.300000, 0.700000, 0.185185, 0.500000)
sincos r4.xyw, null, r4.xyxw
mul r4.xy, r4.xyxx, l(0.250000, 0.250000, 0.000000, 0.000000)
mad r0.x, r0.x, r2.y, r4.x
mad r5.z, r0.y, r0.w, r4.y
sincos null, r0.y, r5.z
mad r0.y, r0.y, l(0.200000), r0.x
add r5.y, r0.y, l(-0.100000)
mul r0.yw, |r3.yyyz|, l(0.000000, 0.500000, 0.000000, 0.500000)
min r0.yw, r0.yyyw, l(0.000000, 1.000000, 0.000000, 1.000000)
mad r2.yw, r0.yyyw, l(0.000000, -2.000000, 0.000000, -2.000000), l(0.000000, 3.000000, 0.000000, 3.000000)
mul r0.yw, r0.yyyw, r0.yyyw
mul r0.yw, r0.yyyw, r2.yyyw
add r3.y, r0.x, -r5.y
mov r3.z, l(0)
mad r3.yz, r0.yyyy, r3.yyzy, r5.yyzy
add r0.x, r0.z, r3.y
mul r0.x, r0.x, l(4.000000)
sincos r0.x, null, r0.x
mad r3.x, r0.x, l(0.100000), r3.y
add r0.xy, -r3.xzxx, r3.yzyy
mad r5.xy, r0.wwww, r0.xyxx, r3.xzxx
mul r0.x, r2.z, r2.z
mad r0.xy, r0.xxxx, l(740.000000, 2.200000, 0.000000, 0.000000), l(60.000000, 0.800000, 0.000000, 0.000000)
frc r0.w, r4.z
ge r6.xyzw, r0.zzzz, l(43.200001, 10.800000, 83.700005, 20.250000)
lt r2.yzw, r0.zzzz, l(0.000000, 64.800003, 21.600000, 10.800000)
and r1.z, r2.y, r6.x
mad r3.xy, r0.wwww, l(4.000000, 4.000000, 0.000000, 0.000000), l(-3.250000, -3.500000, 0.000000, 0.000000)
mad r3.xy, -|r3.xyxx|, l(4.000000, 4.000000, 0.000000, 0.000000), l(1.000000, 1.000000, 0.000000, 0.000000)
max r3.xy, r3.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
and r3.xy, r1.zzzz, r3.xyxx
movc r0.w, r6.z, l(8.000000), l(1.000000)
movc r0.w, r2.z, l(2.000000), r0.w
movc r4.xy, r2.zzzz, l(0,2.000000,0,0), l(0.970000,8.000000,0,0)
mul r0.w, r0.w, -r2.x
frc r0.w, r0.w
mad r0.w, r0.w, l(2.000000), l(-1.000000)
max r0.w, r0.w, l(0.000000)
mov r5.zw, l(0,0,1.000000,1.000000)
mov r7.xyz, l(0,0,0,0)
mov r1.z, l(0)
loop 
  ige r2.x, r1.z, l(2)
  breakc_nz r2.x
  ilt r2.x, l(0), r1.z
  movc r2.x, r2.x, l(-1.000000), l(1.000000)
  mul r2.y, r2.x, r5.x
  itof r3.z, r1.z
  movc r6.x, r1.z, r3.y, r3.x
  mad r6.x, -r6.x, l(0.900000), l(1.000000)
  mov r8.xyz, r7.xyzx
  mov r6.z, l(0)
  loop 
    ige r7.w, r6.z, l(9)
    breakc_nz r7.w
    itof r7.w, r6.z
    mad r8.w, r7.w, l(20.000000), l(100.000000)
    div r8.w, -r8.w, r2.y
    ge r9.x, l(0.000000), r8.w
    ge r9.y, r8.w, l(10000.000000)
    or r9.x, r9.y, r9.x
    if_nz r9.x
      iadd r9.x, r6.z, l(1)
      mov r6.z, r9.x
      continue 
    endif 
    mul r9.xyz, r5.xyzx, r8.wwww
    dp3 r9.z, -r9.xyzx, -r9.xyzx
    rsq r9.z, r9.z
    mul r9.x, r9.z, -r9.x
    mul r9.z, r9.y, l(0.010000)
    round_pi r9.z, r9.z
    mad r7.w, r9.z, l(100.000000), r7.w
    mad r7.w, r3.z, l(123.000000), r7.w
    mul r10.xy, r7.wwww, l(234.123001, 123.456001, 0.000000, 0.000000)
    sincos r10.xy, null, r10.xyxx
    mul r10.xy, r10.xyxx, l(345.234009, 234.345001, 0.000000, 0.000000)
    frc r10.xy, r10.xyxx
    mul r10.zw, r8.wwww, l(0.000000, 0.000000, 0.000300, 0.000100)
    mad r7.w, r10.x, l(0.750000), l(0.250000)
    mad r7.w, r0.z, r7.w, r10.z
    mad r7.w, r10.y, l(12.000000), r7.w
    sincos r7.w, null, r7.w
    mad r7.w, r7.w, r0.x, -r0.x
    add_sat r7.w, r7.w, l(1.000000)
    mul r7.w, r0.y, r7.w
    mad r8.w, r9.z, l(100.000000), -r9.y
    add r8.w, r8.w, l(-50.000000)
    mad_sat r8.w, -|r8.w|, l(0.080000), l(4.000000)
    mul r7.w, r7.w, r8.w
    mul r8.w, r10.w, r10.w
    mul r8.w, r8.w, r8.w
    mul_sat r8.w, r8.w, r10.w
    add r8.w, -r8.w, l(1.000000)
    mul r7.w, r7.w, r8.w
    mad r8.w, -r9.x, r2.x, l(1.000000)
    mad r8.w, -r8.w, r8.w, l(1.000000)
    max r8.w, r8.w, l(0.000000)
    mad r9.x, r8.w, l(-2.000000), l(3.000000)
    mul r8.w, r8.w, r8.w
    mul r8.w, r8.w, r9.x
    mul r7.w, r7.w, r8.w
    dp2 r7.w, r6.xxxx, r7.wwww
    mad r8.w, r0.z, l(0.500000), r10.x
    sincos r8.w, null, r8.w
    mad r8.w, r8.w, l(0.500000), l(0.500000)
    mad r9.xyz, r8.wwww, l(-0.600000, 0.000000, 0.600000, 0.000000), l(1.000000, 0.700000, 0.400000, 0.000000)
    mad r9.xyz, r7.wwww, r9.xyzx, r8.xyzx
    lt r8.w, r4.x, r10.x
    and r8.w, r6.y, r8.w
    mul r7.w, r4.y, r7.w
    mad r10.xyz, r7.wwww, r0.wwww, r9.xyzx
    movc r8.xyz, r8.wwww, r10.xyzx, r9.xyzx
    iadd r6.z, r6.z, l(1)
  endloop 
  mov r7.xyz, r8.xyzx
  iadd r1.z, r1.z, l(1)
endloop 
mul r0.xyw, r7.xyxz, l(0.200000, 0.200000, 0.000000, 0.200000)
mad r1.z, r4.w, l(0.350000), l(0.750000)
log r2.xy, r0.xwxx
mul r1.z, r1.z, r2.x
exp r0.x, r1.z
mad r1.z, -r4.w, l(0.350000), l(0.750000)
mul r1.z, r2.y, r1.z
exp r0.w, r1.z
min r1.z, r4.z, l(1.000000)
mul r1.z, r1.z, r1.z
mul r0.xyw, r0.xyxw, r1.zzzz
mul_sat r1.z, r3.w, l(0.333333)
add r1.z, -r1.z, l(1.000000)
mul r3.xyz, r0.xywx, r1.zzzz
movc r0.xyw, r2.wwww, r3.xyxz, r0.xyxw
dp3 r1.z, r5.xywx, r5.xywx
rsq r1.z, r1.z
mul r1.z, r1.z, r5.x
add r1.z, -|r1.z|, l(1.000000)
max r1.z, r1.z, l(0.000000)
mul r1.z, r1.z, r1.z
mul r1.z, r1.z, r1.z
dp2 r1.z, r1.zzzz, r1.zzzz
mad r2.x, -r0.z, l(0.740741), l(0.500000)
frc r2.x, r2.x
mad r2.x, r2.x, l(4.000000), l(-3.000000)
max r2.x, r2.x, l(0.000000)
mad r1.z, r1.z, r2.x, l(1.000000)
mul r2.xyw, r0.xyxw, r1.zzzz
movc r0.xyw, r6.wwww, r2.xyxw, r0.xyxw
ge r1.z, r0.z, l(21.600000)
mad r2.x, r0.z, l(0.740741), l(-16.000000)
add r2.x, -r2.x, l(1.000000)
max r2.x, r2.x, l(0.000000)
add r2.xyw, r0.xyxw, r2.xxxx
movc r0.xyw, r1.zzzz, r2.xyxw, r0.xyxw
dp3 r1.z, r0.xywx, l(0.330000, 0.330000, 0.330000, 0.000000)
mul r0.z, r0.z, l(0.023148)
min r0.z, r0.z, l(1.000000)
add r2.xyw, r0.xyxw, -r1.zzzz
mad r2.xyw, r0.zzzz, r2.xyxw, r1.zzzz
movc r0.xyz, r2.zzzz, r2.xywx, r0.xywx
mul r0.xyz, r0.xyzx, r0.xyzx
mul r0.xyz, r0.xyzx, l(1.400000, 1.400000, 1.400000, 0.000000)
mov r1.w, -r1.y
add r1.xy, r1.xwxx, l(-0.500000, 0.500000, 0.000000, 0.000000)
dp2 r0.w, r1.xyxx, r1.xyxx
mad r0.w, -r0.w, l(1.500000), l(1.000000)
mul r0.xyz, r0.wwww, r0.xyzx
max r0.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
sqrt o0.xyz, r0.xyzx
mov o0.w, l(1.000000)
mov o1.xyzw, l(0,0,0,0)
ret 
// Approximately 192 instruction slots used
