//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer CBPerMesh
// {
//
//   row_major float4x4 world_view_projection;// Offset:    0 Size:    64
//   row_major float4x4 world;          // Offset:   64 Size:    64
//   float4 material_color;             // Offset:  128 Size:    16 [unused]
//   float4 light_direction;            // Offset:  144 Size:    16 [unused]
//   float4 light_color;                // Offset:  160 Size:    16 [unused]
//   float4 ambient_color;              // Offset:  176 Size:    16 [unused]
//   row_major float4x4 bone_transforms[128];// Offset:  192 Size:  8192 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// CBPerMesh                         cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
// COLOR                    0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
// COLOR                    0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyz         3     NONE   float   xyz 
// TEXCOORD                 2   xyz         4     NONE   float   xyz 
//
gs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[7], immediateIndexed
dcl_input_siv v[3][0].xyzw, position
dcl_input v[3][1].xy
dcl_input v[3][2].xyzw
dcl_input v[3][3].xyz
dcl_temps 3
dcl_inputprimitive triangle 
dcl_stream m0
dcl_outputtopology trianglestrip 
dcl_output_siv o0.xyzw, position
dcl_output o1.xy
dcl_output o2.xyzw
dcl_output o3.xyz
dcl_output o4.xyz
dcl_maxout 3
add r0.xyz, -v[0][0].zxyz, v[1][0].zxyz
add r1.xyz, -v[1][0].yzxy, v[2][0].yzxy
mul r2.xyz, r0.xyzx, r1.xyzx
mad r0.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r0.xyz, r0.wwww, r0.xyzx
mul r1.xyz, r0.yyyy, cb0[5].xyzx
mad r0.xyw, r0.xxxx, cb0[4].xyxz, r1.xyxz
mad r0.xyz, r0.zzzz, cb0[6].xyzx, r0.xywx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r0.xyz, r0.wwww, r0.xyzx
mov r0.w, l(0)
loop 
  ige r1.x, r0.w, l(3)
  breakc_nz r1.x
  mul r1.xyzw, cb0[1].xyzw, v[r0.w + 0][0].yyyy
  mad r1.xyzw, v[r0.w + 0][0].xxxx, cb0[0].xyzw, r1.xyzw
  mad r1.xyzw, v[r0.w + 0][0].zzzz, cb0[2].xyzw, r1.xyzw
  mad r1.xyzw, v[r0.w + 0][0].wwww, cb0[3].xyzw, r1.xyzw
  mov o0.xyzw, r1.xyzw
  mov o1.xy, v[r0.w + 0][1].xyxx
  mov o2.xyzw, v[r0.w + 0][2].xyzw
  mov o3.xyz, r0.xyzx
  mov o4.xyz, v[r0.w + 0][3].xyzx
  emit_stream m0
  iadd r0.w, r0.w, l(1)
endloop 
cut_stream m0
ret 
// Approximately 31 instruction slots used
