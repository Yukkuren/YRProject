//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer CBPerFrame2
// {
//
//   float4 LightColor;                 // Offset:    0 Size:    16 [unused]
//   float4 LightDir;                   // Offset:   16 Size:    16 [unused]
//   float4 AmbientColor;               // Offset:   32 Size:    16 [unused]
//   float4 eyePos;                     // Offset:   48 Size:    16 [unused]
//   float wave_timer;                  // Offset:   64 Size:     4 [unused]
//   float divide;                      // Offset:   68 Size:     4
//   float dummy1;                      // Offset:   72 Size:     4 [unused]
//   float dummy2;                      // Offset:   76 Size:     4 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// CBPerFrame2                       cbuffer      NA          NA            cb2      1 
//
//
//
// Patch Constant signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TessFactor            0   x           0  TRIEDGE   float   x   
// SV_TessFactor            1   x           1  TRIEDGE   float   x   
// SV_TessFactor            2   x           2  TRIEDGE   float   x   
// SV_InsideTessFactor      0   x           3   TRIINT   float   x   
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// COLOR                    0   xyzw        3     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// COLOR                    0   xyzw        3     NONE   float   xyzw
//
// Tessellation Domain   # of control points
// -------------------- --------------------
// Triangle                                3
//
// Tessellation Output Primitive  Partitioning Type 
// ------------------------------ ------------------
// Clockwise Triangles            Integer           
//
hs_5_0
hs_decls 
dcl_input_control_point_count 3
dcl_output_control_point_count 3
dcl_tessellator_domain domain_tri
dcl_tessellator_partitioning partitioning_integer
dcl_tessellator_output_primitive output_triangle_cw
dcl_globalFlags refactoringAllowed | skipOptimization
dcl_constantbuffer CB2[5], immediateIndexed
hs_control_point_phase 
dcl_input vOutputControlPointID
dcl_input v[3][0].xyz
dcl_input v[3][1].xyz
dcl_input v[3][2].xy
dcl_input v[3][3].xyzw
dcl_output o0.xyz
dcl_output o1.xyz
dcl_output o2.xy
dcl_output o3.xyzw
dcl_temps 1
//
// Initial variable locations:
//   vOutputControlPointID.x <- cpid; 
//   o3.x <- <main return value>.Color.x; o3.y <- <main return value>.Color.y; o3.z <- <main return value>.Color.z; o3.w <- <main return value>.Color.w; 
//   o2.x <- <main return value>.Tex.x; o2.y <- <main return value>.Tex.y; 
//   o1.x <- <main return value>.Normal.x; o1.y <- <main return value>.Normal.y; o1.z <- <main return value>.Normal.z; 
//   o0.x <- <main return value>.Position.x; o0.y <- <main return value>.Position.y; o0.z <- <main return value>.Position.z; 
//   v[0][0].x <- patch[0].Position.x; v[0][0].y <- patch[0].Position.y; v[0][0].z <- patch[0].Position.z; 
//   v[0][1].x <- patch[0].Normal.x; v[0][1].y <- patch[0].Normal.y; v[0][1].z <- patch[0].Normal.z; 
//   v[0][2].x <- patch[0].Tex.x; v[0][2].y <- patch[0].Tex.y; 
//   v[0][3].x <- patch[0].Color.x; v[0][3].y <- patch[0].Color.y; v[0][3].z <- patch[0].Color.z; v[0][3].w <- patch[0].Color.w; 
//   v[1][0].x <- patch[1].Position.x; v[1][0].y <- patch[1].Position.y; v[1][0].z <- patch[1].Position.z; 
//   v[1][1].x <- patch[1].Normal.x; v[1][1].y <- patch[1].Normal.y; v[1][1].z <- patch[1].Normal.z; 
//   v[1][2].x <- patch[1].Tex.x; v[1][2].y <- patch[1].Tex.y; 
//   v[1][3].x <- patch[1].Color.x; v[1][3].y <- patch[1].Color.y; v[1][3].z <- patch[1].Color.z; v[1][3].w <- patch[1].Color.w; 
//   v[2][0].x <- patch[2].Position.x; v[2][0].y <- patch[2].Position.y; v[2][0].z <- patch[2].Position.z; 
//   v[2][1].x <- patch[2].Normal.x; v[2][1].y <- patch[2].Normal.y; v[2][1].z <- patch[2].Normal.z; 
//   v[2][2].x <- patch[2].Tex.x; v[2][2].y <- patch[2].Tex.y; 
//   v[2][3].x <- patch[2].Color.x; v[2][3].y <- patch[2].Color.y; v[2][3].z <- patch[2].Color.z; v[2][3].w <- patch[2].Color.w
//
#line 125 "D:\ゲーム制作\YRProject\SourceCode\Shader\Tessellation\Tessellation_hs.hlsl"
mov r0.x, vOutputControlPointID
mov o3.xyzw, v[r0.x + 0][3].xyzw
mov o0.xyz, v[r0.x + 0][0].xyzx
mov o1.xyz, v[r0.x + 0][1].xyzx
mov o2.xy, v[r0.x + 0][2].xyxx
ret 
hs_join_phase 
dcl_output_siv o0.x, finalTriUeq0EdgeTessFactor
dcl_output_siv o1.x, finalTriVeq0EdgeTessFactor
dcl_output_siv o2.x, finalTriWeq0EdgeTessFactor
dcl_output_siv o3.x, finalTriInsideTessFactor
dcl_temps 1

#line 76
mov r0.x, cb2[4].y  // r0.x <- output.factor[0]

#line 77
mov r0.y, cb2[4].y  // r0.y <- output.factor[1]

#line 78
mov r0.z, cb2[4].y  // r0.z <- output.factor[2]

#line 79
mov r0.w, cb2[4].y  // r0.w <- output.inner_factor

#line 89
mov o0.x, r0.x
mov o1.x, r0.y
mov o2.x, r0.z
mov o3.x, r0.w
ret 
// Approximately 15 instruction slots used
