//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer CONSTANT_BUFFER
// {
//
//   float3 iResolution;                // Offset:    0 Size:    12
//   float iTime;                       // Offset:   12 Size:     4
//   float brightness;                  // Offset:   16 Size:     4 [unused]
//   float ray_brightness;              // Offset:   20 Size:     4 [unused]
//   float gamma;                       // Offset:   24 Size:     4 [unused]
//   float spot_brightness;             // Offset:   28 Size:     4 [unused]
//   float ray_density;                 // Offset:   32 Size:     4 [unused]
//   float curvature;                   // Offset:   36 Size:     4 [unused]
//   float red;                         // Offset:   40 Size:     4
//   float green;                       // Offset:   44 Size:     4
//   float blue;                        // Offset:   48 Size:     4
//   float4 material_color;             // Offset:   64 Size:    16 [unused]
//   float dummy1;                      // Offset:   80 Size:     4 [unused]
//   float dummy2;                      // Offset:   84 Size:     4 [unused]
//   float dummy3;                      // Offset:   88 Size:     4 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// CONSTANT_BUFFER                   cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xy  
// TEXCOORD                 0   xy          1     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[4], immediateIndexed
dcl_input_ps_siv linear noperspective v0.xy, position
dcl_output o0.xyzw
dcl_temps 1
add r0.y, -v0.y, cb0[0].y
mov r0.x, v0.x
mad r0.xy, r0.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), -cb0[0].xyxx
div r0.xy, r0.xyxx, cb0[0].yyyy
dp2 r0.z, r0.xyxx, r0.xyxx
sqrt r0.z, r0.z
mul r0.z, r0.z, l(0.250000)
mul r0.w, cb0[0].w, l(2.670000)
sincos null, r0.w, r0.w
mad r0.xy, r0.zzzz, r0.wwww, r0.xyxx
add r0.z, cb0[0].w, cb0[0].w
frc r0.z, r0.z
mul r0.z, r0.z, l(1.442695)
exp r0.z, r0.z
div r0.zw, r0.xxxy, r0.zzzz
dp2 r0.x, r0.xyxx, r0.xyxx
sqrt r0.x, r0.x
mul r0.x, r0.x, l(1.442695)
exp r0.x, r0.x
dp2 r0.y, r0.zwzz, r0.zwzz
sqrt r0.y, r0.y
log r0.y, r0.y
mul r0.y, r0.y, l(0.693147)
frc r0.y, r0.y
add r0.yz, r0.yyyy, l(0.000000, -1.000000, -0.950000, 0.000000)
mul r0.yz, r0.zzyz, l(0.000000, -16.666666, -9.999998, 0.000000)
mov_sat r0.y, r0.y
min r0.z, r0.z, l(1.000000)
mad r0.w, r0.y, l(-2.000000), l(3.000000)
mul r0.y, r0.y, r0.y
mul r0.y, r0.y, r0.w
mad r0.w, r0.z, l(-2.000000), l(3.000000)
mul r0.z, r0.z, r0.z
mad r0.y, r0.w, r0.z, -r0.y
add r0.z, cb0[0].w, l(1.884000)
sincos r0.z, null, r0.z
mad r0.z, r0.z, l(0.500000), l(1.000000)
mul r0.x, r0.x, r0.z
mul r0.x, r0.y, r0.x
mul o0.xy, r0.xxxx, cb0[2].zwzz
mul o0.z, r0.x, cb0[3].x
mov o0.w, l(1.000000)
ret 
// Approximately 43 instruction slots used
