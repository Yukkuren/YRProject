//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer CONSTANT_BUFFER
// {
//
//   float3 iResolution;                // Offset:    0 Size:    12
//   float iTime;                       // Offset:   12 Size:     4
//   float brightness;                  // Offset:   16 Size:     4 [unused]
//   float ray_brightness;              // Offset:   20 Size:     4 [unused]
//   float gamma;                       // Offset:   24 Size:     4 [unused]
//   float spot_brightness;             // Offset:   28 Size:     4 [unused]
//   float ray_density;                 // Offset:   32 Size:     4 [unused]
//   float curvature;                   // Offset:   36 Size:     4 [unused]
//   float red;                         // Offset:   40 Size:     4 [unused]
//   float green;                       // Offset:   44 Size:     4 [unused]
//   float blue;                        // Offset:   48 Size:     4 [unused]
//   float4 material_color;             // Offset:   64 Size:    16 [unused]
//   float dummy1;                      // Offset:   80 Size:     4 [unused]
//   float dummy2;                      // Offset:   84 Size:     4 [unused]
//   float dummy3;                      // Offset:   88 Size:     4 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// CONSTANT_BUFFER                   cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xy  
// TEXCOORD                 0   xy          1     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
// SV_TARGET                1   xyzw        1   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[1], immediateIndexed
dcl_input_ps_siv linear noperspective v0.xy, position
dcl_output o0.xyzw
dcl_output o1.xyzw
dcl_temps 4
div r0.x, cb0[0].x, cb0[0].y
add r1.y, -v0.y, cb0[0].y
mov r1.x, v0.x
div r0.yz, r1.xxyx, cb0[0].xxyx
add r1.yz, r0.yyzy, l(0.000000, -0.500000, -0.500000, 0.000000)
mul r1.x, r0.x, r1.y
dp2 r0.x, r1.xzxx, r1.xzxx
sqrt r0.x, r0.x
div r1.xy, r1.xzxx, r0.xxxx
add r2.xyz, cb0[0].wwww, l(0.070000, 0.140000, 0.210000, 0.000000)
sincos r3.xyz, null, r2.xyzx
add r2.xyz, r2.xyzx, r2.xyzx
mad r2.xyz, r0.xxxx, l(9.000000, 9.000000, 9.000000, 0.000000), -r2.xyzx
sincos r2.xyz, null, r2.xyzx
add r3.xyz, r3.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mul r1.zw, r1.xxxy, r3.zzzz
mul r3.xyzw, r1.xyxy, r3.xxyy
mad r3.xyzw, r3.xyzw, |r2.xxyy|, r0.yzyz
mad r0.yz, r1.zzwz, |r2.zzzz|, r0.yyzy
ge r1.xy, r0.yzyy, -r0.yzyy
frc r0.yz, |r0.yyzy|
movc r0.yz, r1.xxyx, r0.yyzy, -r0.yyzy
add r0.yz, r0.yyzy, l(0.000000, -0.500000, -0.500000, 0.000000)
dp2 r0.y, |r0.yzyy|, |r0.yzyy|
sqrt r0.y, r0.y
div r1.z, l(0.010000), r0.y
ge r2.xyzw, r3.xyzw, -r3.xyzw
frc r3.xyzw, |r3.xyzw|
movc r2.xyzw, r2.xyzw, r3.xyzw, -r3.xyzw
add r2.xyzw, r2.xyzw, l(-0.500000, -0.500000, -0.500000, -0.500000)
dp2 r0.y, |r2.xyxx|, |r2.xyxx|
dp2 r0.z, |r2.zwzz|, |r2.zwzz|
sqrt r0.yz, r0.yyzy
div r1.xy, l(0.010000, 0.010000, 0.000000, 0.000000), r0.yzyy
div o0.xyz, r1.xyzx, r0.xxxx
mov o0.w, cb0[0].w
mov o1.xyzw, l(0,0,0,0)
ret 
// Approximately 38 instruction slots used
