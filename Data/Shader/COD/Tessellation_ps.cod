//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer CBPerFrame2
// {
//
//   float4 LightColor;                 // Offset:    0 Size:    16
//   float4 LightDir;                   // Offset:   16 Size:    16
//   float4 AmbientColor;               // Offset:   32 Size:    16
//   float4 eyePos;                     // Offset:   48 Size:    16 [unused]
//   float wave_timer;                  // Offset:   64 Size:     4 [unused]
//   float divide;                      // Offset:   68 Size:     4 [unused]
//   float dummy1;                      // Offset:   72 Size:     4 [unused]
//   float dummy2;                      // Offset:   76 Size:     4 [unused]
//
// }
//
// cbuffer CONSTANT_BUFFER
// {
//
//   float4x4 World;                    // Offset:    0 Size:    64 [unused]
//   float4x4 matWVP;                   // Offset:   64 Size:    64 [unused]
//   float4 material_color;             // Offset:  128 Size:    16 [unused]
//   float4 light_direction;            // Offset:  144 Size:    16 [unused]
//   float4 light_color;                // Offset:  160 Size:    16 [unused]
//   float4 ambient_color;              // Offset:  176 Size:    16 [unused]
//   row_major float4x4 bone_transforms[128];// Offset:  192 Size:  8192 [unused]
//   float4 EyePos;                     // Offset: 8384 Size:    16
//   row_major float4x4 view;           // Offset: 8400 Size:    64 [unused]
//   row_major float4x4 projection;     // Offset: 8464 Size:    64 [unused]
//   float3 at;                         // Offset: 8528 Size:    12 [unused]
//   float lumi_factor;                 // Offset: 8540 Size:     4 [unused]
//   float Offset_X;                    // Offset: 8544 Size:     4 [unused]
//   float Offset_Y;                    // Offset: 8548 Size:     4 [unused]
//   float dummy00;                     // Offset: 8552 Size:     4 [unused]
//   float dummy01;                     // Offset: 8556 Size:     4 [unused]
//   float4 dummy02;                    // Offset: 8560 Size:    16 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// DecalSampler                      sampler      NA          NA             s0      1 
// DiffuseTexture                    texture  float4          2d             t0      1 
// NormalTexture                     texture  float4          2d             t1      1 
// CONSTANT_BUFFER                   cbuffer      NA          NA            cb0      1 
// CBPerFrame2                       cbuffer      NA          NA            cb2      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// COLOR                    0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 0   xyz         2     NONE   float   xyz 
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TEXCOORD                 2   xyz         4     NONE   float   xyz 
// TEXCOORD                 3   xyz         5     NONE   float   xyz 
// TEXCOORD                 4   xyz         6     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed | skipOptimization
dcl_constantbuffer CB2[3], immediateIndexed
dcl_constantbuffer CB0[525], immediateIndexed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_input_ps linear v1.xyzw
dcl_input_ps linear v2.xyz
dcl_input_ps linear v3.xy
dcl_input_ps linear v4.xyz
dcl_input_ps linear v5.xyz
dcl_input_ps linear v6.xyz
dcl_output o0.xyzw
dcl_temps 11
//
// Initial variable locations:
//   v0.x <- input.Position.x; v0.y <- input.Position.y; v0.z <- input.Position.z; v0.w <- input.Position.w; 
//   v1.x <- input.Color.x; v1.y <- input.Color.y; v1.z <- input.Color.z; v1.w <- input.Color.w; 
//   v2.x <- input.wPosition.x; v2.y <- input.wPosition.y; v2.z <- input.wPosition.z; 
//   v3.x <- input.Tex.x; v3.y <- input.Tex.y; 
//   v4.x <- input.vT.x; v4.y <- input.vT.y; v4.z <- input.vT.z; 
//   v5.x <- input.vB.x; v5.y <- input.vB.y; v5.z <- input.vB.z; 
//   v6.x <- input.vN.x; v6.y <- input.vN.y; v6.z <- input.vN.z; 
//   o0.x <- <main return value>.x; o0.y <- <main return value>.y; o0.z <- <main return value>.z; o0.w <- <main return value>.w
//
#line 115 "D:\ゲーム制作\YRProject\SourceCode\Shader\Tessellation\Tessellation_ps.hlsl"
sample_indexable(texture2d)(float,float,float,float) r0.xyzw, v3.xyxx, t0.xyzw, s0  // r0.x <- color.x; r0.y <- color.y; r0.z <- color.z; r0.w <- color.w

#line 116
mov r1.xyz, -v2.xyzx
add r1.xyz, r1.xyzx, cb0[524].xyzx
dp3 r1.w, r1.xyzx, r1.xyzx
rsq r1.w, r1.w
mul r1.xyz, r1.wwww, r1.xyzx  // r1.x <- E.x; r1.y <- E.y; r1.z <- E.z

#line 117
dp3 r1.w, cb2[1].xyzx, cb2[1].xyzx
rsq r1.w, r1.w
mul r2.xyz, r1.wwww, cb2[1].xyzx  // r2.x <- L.x; r2.y <- L.y; r2.z <- L.z

#line 118
mov r3.xyz, cb2[0].xyzx  // r3.x <- C.x; r3.y <- C.y; r3.z <- C.z

#line 120
mov r4.xyz, cb2[2].xyzx  // r4.x <- A.x; r4.y <- A.y; r4.z <- A.z

#line 123
sample_indexable(texture2d)(float,float,float,float) r5.xyz, v3.xyxx, t1.xyzw, s0
mov r5.xyz, r5.xyzx  // r5.x <- N.x; r5.y <- N.y; r5.z <- N.z

#line 124
mul r5.xyz, r5.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000)
mov r6.xyz, l(-1.000000,-1.000000,-1.000000,-0.000000)
add r5.xyz, r5.xyzx, r6.xyzx

#line 127
dp3 r1.w, v4.xyzx, v4.xyzx
rsq r1.w, r1.w
mul r6.xyz, r1.wwww, v4.xyzx  // r6.x <- vx.x; r6.y <- vx.y; r6.z <- vx.z

#line 128
dp3 r1.w, v5.xyzx, v5.xyzx
rsq r1.w, r1.w
mul r7.xyz, r1.wwww, v5.xyzx  // r7.x <- vy.x; r7.y <- vy.y; r7.z <- vy.z

#line 129
dp3 r1.w, v6.xyzx, v6.xyzx
rsq r1.w, r1.w
mul r8.xyz, r1.wwww, v6.xyzx  // r8.x <- vz.x; r8.y <- vz.y; r8.z <- vz.z

#line 132
mov r9.x, r6.x  // r9.x <- mat._m00
mov r9.y, r7.x  // r9.y <- mat._m10
mov r9.z, r8.x  // r9.z <- mat._m20
mov r10.x, r6.y  // r10.x <- mat._m01
mov r10.y, r7.y  // r10.y <- mat._m11
mov r10.z, r8.y  // r10.z <- mat._m21
mov r8.x, r6.z  // r8.x <- mat._m02
mov r8.y, r7.z  // r8.y <- mat._m12
mov r8.z, r8.z  // r8.z <- mat._m22

#line 135
dp3 r6.x, r5.xyzx, r9.xyzx
dp3 r6.y, r5.xyzx, r10.xyzx
dp3 r6.z, r5.xyzx, r8.xyzx
dp3 r1.w, r6.xyzx, r6.xyzx
rsq r1.w, r1.w
mul r5.xyz, r1.wwww, r6.xyzx

#line 138
itof r6.xyz, l(1, 1, 1, 0)  // r6.x <- Kd.x; r6.y <- Kd.y; r6.z <- Kd.z

#line 139
nop 
mov r5.xyz, r5.xyzx
mov r2.xyz, r2.xyzx
mov r3.xyz, r3.xyzx
mov r6.xyz, r6.xyzx

#line 14
mov r7.xyz, -r2.xyzx
dp3 r1.w, r5.xyzx, r7.xyzx  // r1.w <- D

#line 15
mul r1.w, r1.w, l(0.500000)
add r1.w, r1.w, l(0.500000)  // r1.w <- D

#line 17
mul r7.xyz, r1.wwww, r3.xyzx
mul r6.xyz, r6.xyzx, r7.xyzx  // r6.x <- <HalfLambert return value>.x; r6.y <- <HalfLambert return value>.y; r6.z <- <HalfLambert return value>.z

#line 139
mov r6.xyz, r6.xyzx  // r6.x <- D.x; r6.y <- D.y; r6.z <- D.z

#line 142
itof r7.xyz, l(1, 1, 1, 0)  // r7.x <- Ks.x; r7.y <- Ks.y; r7.z <- Ks.z

#line 143
nop 
mov r5.xyz, r5.xyzx
mov r2.xyz, r2.xyzx
mov r3.xyz, r3.xyzx
mov r1.xyz, r1.xyzx
mov r7.xyz, r7.xyzx

#line 35
dp3 r1.w, r2.xyzx, r5.xyzx
add r1.w, r1.w, r1.w
mov r1.w, -r1.w
mul r8.xyz, r1.wwww, r5.xyzx
add r8.xyz, r2.xyzx, r8.xyzx  // r8.x <- R.x; r8.y <- R.y; r8.z <- R.z

#line 36
dp3 r1.w, r8.xyzx, r8.xyzx
rsq r1.w, r1.w
mul r8.xyz, r1.wwww, r8.xyzx

#line 37
dp3 r8.z, r8.xyzx, r1.xyzx
mov r8.xyz, r8.zzzz  // r8.x <- S.x; r8.y <- S.y; r8.z <- S.z

#line 38
itof r9.xyz, l(0, 0, 0, 0)
max r8.xyz, r8.xyzx, r9.xyzx

#line 39
mov r9.xyz, l(1.000000,1.000000,1.000000,0)
mul r8.xyz, r8.xyzx, r8.xyzx
mul r9.xyz, r8.xyzx, r9.xyzx
mul r8.xyz, r8.xyzx, r8.xyzx
mul r8.xyz, r8.xyzx, r8.xyzx
mul r8.xyz, r8.xyzx, r8.xyzx
mul r9.xyz, r8.xyzx, r9.xyzx
mul r8.xyz, r8.xyzx, r8.xyzx
mul r8.xyz, r8.xyzx, r9.xyzx  // r8.x <- S.x; r8.y <- S.y; r8.z <- S.z

#line 40
mul r7.xyz, r7.xyzx, r8.xyzx
mul r7.xyz, r3.xyzx, r7.xyzx  // r7.x <- S.x; r7.y <- S.y; r7.z <- S.z

#line 41
mov r7.xyz, r7.xyzx  // r7.x <- <PhongSpecular return value>.x; r7.y <- <PhongSpecular return value>.y; r7.z <- <PhongSpecular return value>.z

#line 143
mov r7.xyz, r7.xyzx  // r7.x <- S.x; r7.y <- S.y; r7.z <- S.z

#line 145
nop 
mov r5.xyz, r5.xyzx
mov r1.xyz, r1.xyzx
mov r2.xyz, r2.xyzx
mov r3.xyz, r3.xyzx

#line 55
dp3 r1.x, r5.xyzx, r1.xyzx
max r1.x, r1.x, l(0.000000)
min r1.x, r1.x, l(1.000000)
mov r1.x, -r1.x
add r1.x, r1.x, l(1.000000)  // r1.x <- rim

#line 57
mov r1.yzw, -r2.xxyz
dp3 r1.y, r5.xyzx, r1.yzwy  // r1.y <- ratio

#line 58
mul r1.y, r1.y, l(0.500000)
add r1.y, r1.y, l(0.500000)  // r1.y <- ratio

#line 61
mul r1.xzw, r1.xxxx, r3.xxyz
mul r1.xyz, r1.yyyy, r1.xzwx
mul r1.xyz, r1.xyzx, l(10.000000, 10.000000, 10.000000, 0.000000)  // r1.x <- <RimLight return value>.x; r1.y <- <RimLight return value>.y; r1.z <- <RimLight return value>.z

#line 145
mov r1.xyz, r1.xyzx  // r1.x <- R.x; r1.y <- R.y; r1.z <- R.z

#line 147
mul r0.xyzw, r0.xyzw, v1.xyzw

#line 148
add r2.xyz, r4.xyzx, r6.xyzx
add r2.xyz, r7.xyzx, r2.xyzx
add r1.xyz, r1.xyzx, r2.xyzx
mul r0.xyz, r0.xyzx, r1.xyzx

#line 150
mov o0.xyz, r0.xyzx
mov o0.w, r0.w
ret 
// Approximately 111 instruction slots used
