//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer CBPerMesh
// {
//
//   row_major float4x4 world_view_projection;// Offset:    0 Size:    64
//   row_major float4x4 world;          // Offset:   64 Size:    64
//   float4 material_color;             // Offset:  128 Size:    16 [unused]
//   float4 light_direction;            // Offset:  144 Size:    16 [unused]
//   float4 light_color;                // Offset:  160 Size:    16 [unused]
//   float4 ambient_color;              // Offset:  176 Size:    16 [unused]
//   row_major float4x4 bone_transforms[128];// Offset:  192 Size:  8192 [unused]
//   float4 eyepos;                     // Offset: 8384 Size:    16 [unused]
//   float4x4 view;                     // Offset: 8400 Size:    64 [unused]
//   float4x4 projection;               // Offset: 8464 Size:    64 [unused]
//   float3 at;                         // Offset: 8528 Size:    12 [unused]
//   float lumi_factor;                 // Offset: 8540 Size:     4 [unused]
//   float offset_X;                    // Offset: 8544 Size:     4 [unused]
//   float offset_Y;                    // Offset: 8548 Size:     4 [unused]
//   float dummy00;                     // Offset: 8552 Size:     4 [unused]
//   float dummy01;                     // Offset: 8556 Size:     4 [unused]
//
// }
//
// cbuffer CBPerFrame
// {
//
//   float4 LightColor;                 // Offset:    0 Size:    16 [unused]
//   float4 LightDir;                   // Offset:   16 Size:    16 [unused]
//   float4 AmbientColor;               // Offset:   32 Size:    16 [unused]
//   float4 EyePos;                     // Offset:   48 Size:    16 [unused]
//   float Density;                     // Offset:   64 Size:     4 [unused]
//   float Distance;                    // Offset:   68 Size:     4
//   float dummy1;                      // Offset:   72 Size:     4 [unused]
//   float dummy2;                      // Offset:   76 Size:     4 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// CBPerMesh                         cbuffer      NA          NA            cb0      1 
// CBPerFrame                        cbuffer      NA          NA            cb2      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// COLOR                    0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 2   xyz         4     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
// COLOR                    0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyz         3     NONE   float   xyz 
// TEXCOORD                 2   xyz         4     NONE   float   xyz 
// NORMAL                   0   xyz         5     NONE   float   xyz 
//
gs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[8], immediateIndexed
dcl_constantbuffer CB2[5], immediateIndexed
dcl_input v[3][0].xyzw
dcl_input v[3][1].xyz
dcl_input v[3][2].xy
dcl_input v[3][3].xyzw
dcl_input v[3][4].xyz
dcl_temps 6
dcl_inputprimitive triangle 
dcl_stream m0
dcl_outputtopology trianglestrip 
dcl_output_siv o0.xyzw, position
dcl_output o1.xy
dcl_output o2.xyzw
dcl_output o3.xyz
dcl_output o4.xyz
dcl_output o5.xyz
dcl_maxout 48
mov r0.x, l(0)
loop 
  uge r0.y, r0.x, l(16)
  breakc_nz r0.y
  itof r0.y, r0.x
  mul r0.z, r0.y, l(0.062500)
  sqrt r0.z, r0.z
  mad r0.w, -r0.y, l(0.062500), l(1.000000)
  mov r1.x, l(0)
  loop 
    ige r1.y, r1.x, l(3)
    breakc_nz r1.y
    mul r1.yzw, cb2[4].yyyy, v[r1.x + 0][1].xxyz
    mad r1.yzw, r1.yyzw, r0.yyyy, v[r1.x + 0][0].xxyz
    mul r2.xyzw, r1.zzzz, cb0[1].xyzw
    mad r2.xyzw, r1.yyyy, cb0[0].xyzw, r2.xyzw
    mad r2.xyzw, r1.wwww, cb0[2].xyzw, r2.xyzw
    mad r2.xyzw, v[r1.x + 0][0].wwww, cb0[3].xyzw, r2.xyzw
    mul r3.xyz, cb0[5].xyzx, v[r1.x + 0][1].yyyy
    mad r3.xyz, v[r1.x + 0][1].xxxx, cb0[4].xyzx, r3.xyzx
    mad r3.xyz, v[r1.x + 0][1].zzzz, cb0[6].xyzx, r3.xyzx
    dp3 r3.w, r3.xyzx, r3.xyzx
    rsq r3.w, r3.w
    mul r3.xyz, r3.wwww, r3.xyzx
    mul r4.xyz, r0.zzzz, v[r1.x + 0][3].xyzx
    mul r3.w, r0.w, v[r1.x + 0][3].w
    mul r5.xyz, r1.zzzz, cb0[5].xyzx
    mad r5.xyz, r1.yyyy, cb0[4].xyzx, r5.xyzx
    mad r1.yzw, r1.wwww, cb0[6].xxyz, r5.xxyz
    mad r1.yzw, v[r1.x + 0][0].wwww, cb0[7].xxyz, r1.yyzw
    mov o0.xyzw, r2.xyzw
    mov o1.xy, v[r1.x + 0][2].xyxx
    mov o2.xyz, r4.xyzx
    mov o2.w, r3.w
    mov o3.xyz, r3.xyzx
    mov o4.xyz, r1.yzwy
    mov o5.xyz, l(0,0,0,0)
    emit_stream m0
    iadd r1.x, r1.x, l(1)
  endloop 
  iadd r0.x, r0.x, l(1)
endloop 
cut_stream m0
ret 
// Approximately 44 instruction slots used
