//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer CONSTANT_BUFFER
// {
//
//   row_major float4x4 world_view_projection;// Offset:    0 Size:    64 [unused]
//   row_major float4x4 world;          // Offset:   64 Size:    64
//   float4 material_color;             // Offset:  128 Size:    16 [unused]
//   float4 EyePos;                     // Offset:  144 Size:    16 [unused]
//   row_major float4x4 view;           // Offset:  160 Size:    64
//   row_major float4x4 projection;     // Offset:  224 Size:    64
//   float3 at;                         // Offset:  288 Size:    12 [unused]
//   float dummy;                       // Offset:  300 Size:     4 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// CONSTANT_BUFFER                   cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
//
//
// Constant buffer to DX9 shader constant mappings:
//
// Target Reg Buffer  Start Reg # of Regs        Data Conversion
// ---------- ------- --------- --------- ----------------------
// c1         cb0             4         4  ( FLT, FLT, FLT, FLT)
// c5         cb0            10         2  ( FLT, FLT, FLT, FLT)
// c7         cb0            13         5  ( FLT, FLT, FLT, FLT)
//
//
// Runtime generated constant mappings:
//
// Target Reg                               Constant Description
// ---------- --------------------------------------------------
// c0                              Vertex Shader position offset
//
//
// Level9 shader bytecode:
//
    vs_2_x
    def c12, 1, 0, 0, 0
    dcl_texcoord v0  // position<0,1,2>

#line 26 "E:\ゲーム制作\YRProject\geometric_primitive_vs.hlsl"
    mov r0.xy, c12
    dp4 r1.x, c1, r0.xyyy  // ::newWorld<0>
    dp4 r2.x, c1.yxzw, r0.xyyy  // ::newWorld<1>
    dp4 r3.x, c1.wyzx, r0.xyyy  // ::newWorld<3>
    dp4 r1.y, c2, r0.xyyy  // ::newWorld<4>
    dp4 r2.y, c2.yxzw, r0.xyyy  // ::newWorld<5>
    dp4 r3.y, c2.wyzx, r0.xyyy  // ::newWorld<7>
    dp4 r1.z, c3, r0.xyyy  // ::newWorld<8>
    dp4 r2.z, c3.yxzw, r0.xyyy  // ::newWorld<9>
    dp4 r3.z, c3.wyzx, r0.xyyy  // ::newWorld<11>
    dp4 r1.w, c4, r0.xyyy  // ::newWorld<12>
    dp4 r2.w, c4.yxzw, r0.xyyy  // ::newWorld<13>
    dp4 r3.w, c4.wyzx, r0.xyyy  // ::newWorld<15>
    mul r4, v0.xyzx, c12.xxxy
    add r4, r4, c12.yyyx
    dp4 r0.y, r4, r1  // ::Posi<0>
    mul r1, v0.xyzx, c12.xxxy
    add r1, r1, c12.yyyx
    dp4 r0.z, r1, r2  // ::Posi<1>
    mul r1, v0.xyzx, c12.xxxy
    add r1, r1, c12.yyyx
    dp4 r0.w, r1, r3  // ::Posi<3>
    mul r1, r0.y, c5
    mul r2, r0.z, c6
    add r1, r1, r2
    add r1, r1, c12.y
    mul r2, r0.w, c7
    add r1, r1, r2  // ::Posi<0,1,2,3>
    mul r2, r1.x, c8
    mul r3, r1.y, c9
    add r2, r2, r3
    mul r3, r1.z, c10
    add r2, r2, r3
    mul r1, r1.w, c11
    add r1, r1, r2  // ::Posi<0,1,2,3>
    rcp r2.x, r1.w
    rcp r2.y, r1.w
    rcp r2.z, r1.w
    rcp r2.w, r1.w
    mul r1, r1, r2  // ::Posi<0,1,2,3>
    mov r1, r1  // ::vout<0,1,2,3>

#line 38
    mov r1, r1  // ::main<0,1,2,3>

#line 9
    mul r0.xy, r0.x, c0
    add oPos.xy, r0, r1  // ::main<0,1>
    mov oPos.zw, r1  // ::main<2,3>

// approximately 45 instruction slots used
vs_4_0
dcl_constantbuffer CB0[18], immediateIndexed
dcl_input v0.xyz
dcl_output_siv o0.xyzw, position
dcl_temps 8
//
// Initial variable locations:
//   v0.x <- position.x; v0.y <- position.y; v0.z <- position.z; 
//   o0.x <- <main return value>.position.x; o0.y <- <main return value>.position.y; o0.z <- <main return value>.position.z; o0.w <- <main return value>.position.w
//
#line 20 "E:\ゲーム制作\YRProject\geometric_primitive_vs.hlsl"
itof r0.xyzw, l(1, 0, 0, 0)  // r0.x <- Mat._m00; r0.y <- Mat._m10; r0.z <- Mat._m20; r0.w <- Mat._m30
itof r1.xyzw, l(0, 1, 0, 0)  // r1.x <- Mat._m01; r1.y <- Mat._m11; r1.z <- Mat._m21; r1.w <- Mat._m31
itof r2.xyzw, l(0, 0, 0, 0)  // r2.x <- Mat._m02; r2.y <- Mat._m12; r2.z <- Mat._m22; r2.w <- Mat._m32
itof r3.xyzw, l(0, 0, 0, 1)  // r3.x <- Mat._m03; r3.y <- Mat._m13; r3.z <- Mat._m23; r3.w <- Mat._m33

#line 26
dp4 r4.x, cb0[4].xyzw, r0.xyzw  // r4.x <- newWorld._m00
dp4 r5.x, cb0[4].xyzw, r1.xyzw  // r5.x <- newWorld._m01
dp4 r6.x, cb0[4].xyzw, r2.xyzw  // r6.x <- newWorld._m02
dp4 r7.x, cb0[4].xyzw, r3.xyzw  // r7.x <- newWorld._m03
dp4 r4.y, cb0[5].xyzw, r0.xyzw  // r4.y <- newWorld._m10
dp4 r5.y, cb0[5].xyzw, r1.xyzw  // r5.y <- newWorld._m11
dp4 r6.y, cb0[5].xyzw, r2.xyzw  // r6.y <- newWorld._m12
dp4 r7.y, cb0[5].xyzw, r3.xyzw  // r7.y <- newWorld._m13
dp4 r4.z, cb0[6].xyzw, r0.xyzw  // r4.z <- newWorld._m20
dp4 r5.z, cb0[6].xyzw, r1.xyzw  // r5.z <- newWorld._m21
dp4 r6.z, cb0[6].xyzw, r2.xyzw  // r6.z <- newWorld._m22
dp4 r7.z, cb0[6].xyzw, r3.xyzw  // r7.z <- newWorld._m23
dp4 r4.w, cb0[7].xyzw, r0.xyzw  // r4.w <- newWorld._m30
dp4 r5.w, cb0[7].xyzw, r1.xyzw  // r5.w <- newWorld._m31
dp4 r6.w, cb0[7].xyzw, r2.xyzw  // r6.w <- newWorld._m32
dp4 r7.w, cb0[7].xyzw, r3.xyzw  // r7.w <- newWorld._m33

#line 27
mov r0.xyz, v0.xyzx
mov r0.w, l(1.000000)
dp4 r1.x, r0.xyzw, r4.xyzw  // r1.x <- Posi.x
dp4 r1.y, r0.xyzw, r5.xyzw  // r1.y <- Posi.y
dp4 r1.z, r0.xyzw, r6.xyzw  // r1.z <- Posi.z
dp4 r0.x, r0.xyzw, r7.xyzw  // r0.x <- Posi.w

#line 28
mul r2.xyzw, r1.xxxx, cb0[10].xyzw
mul r3.xyzw, r1.yyyy, cb0[11].xyzw
add r2.xyzw, r2.xyzw, r3.xyzw
mul r1.xyzw, r1.zzzz, cb0[12].xyzw
add r1.xyzw, r1.xyzw, r2.xyzw
mul r0.xyzw, r0.xxxx, cb0[13].xyzw
add r0.xyzw, r0.xyzw, r1.xyzw  // r0.x <- Posi.x; r0.y <- Posi.y; r0.z <- Posi.z; r0.w <- Posi.w

#line 29
mul r1.xyzw, r0.xxxx, cb0[14].xyzw
mul r2.xyzw, r0.yyyy, cb0[15].xyzw
add r1.xyzw, r1.xyzw, r2.xyzw
mul r2.xyzw, r0.zzzz, cb0[16].xyzw
add r1.xyzw, r1.xyzw, r2.xyzw
mul r0.xyzw, r0.wwww, cb0[17].xyzw
add r0.xyzw, r0.xyzw, r1.xyzw  // r0.x <- Posi.x; r0.y <- Posi.y; r0.z <- Posi.z; r0.w <- Posi.w

#line 30
div r0.xyzw, r0.xyzw, r0.wwww

#line 32
mov r0.xyzw, r0.xyzw  // r0.x <- vout.position.x; r0.y <- vout.position.y; r0.z <- vout.position.z; r0.w <- vout.position.w

#line 38
mov o0.xyzw, r0.xyzw
ret 
// Approximately 44 instruction slots used
