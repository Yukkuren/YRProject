//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer CONSTANT_BUFFER
// {
//
//   row_major float4x4 world_view_projection;// Offset:    0 Size:    64 [unused]
//   row_major float4x4 world;          // Offset:   64 Size:    64
//   float4 material_color;             // Offset:  128 Size:    16 [unused]
//   float4 EyePos;                     // Offset:  144 Size:    16 [unused]
//   row_major float4x4 view;           // Offset:  160 Size:    64
//   row_major float4x4 projection;     // Offset:  224 Size:    64
//   float3 at;                         // Offset:  288 Size:    12 [unused]
//   float dummy;                       // Offset:  300 Size:     4 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// CONSTANT_BUFFER                   cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
//
//
// Constant buffer to DX9 shader constant mappings:
//
// Target Reg Buffer  Start Reg # of Regs        Data Conversion
// ---------- ------- --------- --------- ----------------------
// c1         cb0             4         4  ( FLT, FLT, FLT, FLT)
// c5         cb0            10         2  ( FLT, FLT, FLT, FLT)
// c7         cb0            13         5  ( FLT, FLT, FLT, FLT)
//
//
// Runtime generated constant mappings:
//
// Target Reg                               Constant Description
// ---------- --------------------------------------------------
// c0                              Vertex Shader position offset
//
//
// Level9 shader bytecode:
//
    vs_2_x
    def c12, 1, 0, 0, 0
    dcl_texcoord v0
    mov r0.x, c1.y
    mov r0.y, c2.y
    mov r0.z, c3.y
    mov r0.w, c4.y
    mad r1, v0.xyzx, c12.xxxy, c12.yyyx
    dp4 r0.x, r1, r0
    mul r0, r0.x, c6
    mov r2.x, c1.x
    mov r2.y, c2.x
    mov r2.z, c3.x
    mov r2.w, c4.x
    dp4 r2.x, r1, r2
    mad r0, r2.x, c5, r0
    mov r2.x, c1.w
    mov r2.y, c2.w
    mov r2.z, c3.w
    mov r2.w, c4.w
    dp4 r1.x, r1, r2
    mad r0, r1.x, c7, r0
    mul r1, r0.y, c9
    mad r1, r0.x, c8, r1
    mad r1, r0.z, c10, r1
    mad r0, r0.w, c11, r1
    rcp r1.x, r0.w
    mad oPos.xy, r0, r1.x, c0
    mul r0.xy, r0.zwzw, r1.x
    mov oPos.zw, r0.xyxy

// approximately 27 instruction slots used
vs_4_0
dcl_constantbuffer CB0[18], immediateIndexed
dcl_input v0.xyz
dcl_output_siv o0.xyzw, position
dcl_temps 3
mov r0.x, cb0[4].y
mov r0.y, cb0[5].y
mov r0.z, cb0[6].y
mov r0.w, cb0[7].y
mov r1.xyz, v0.xyzx
mov r1.w, l(1.000000)
dp4 r0.x, r1.xyzw, r0.xyzw
mul r0.xyzw, r0.xxxx, cb0[11].xyzw
mov r2.x, cb0[4].x
mov r2.y, cb0[5].x
mov r2.z, cb0[6].x
mov r2.w, cb0[7].x
dp4 r2.x, r1.xyzw, r2.xyzw
mad r0.xyzw, r2.xxxx, cb0[10].xyzw, r0.xyzw
mov r2.x, cb0[4].w
mov r2.y, cb0[5].w
mov r2.z, cb0[6].w
mov r2.w, cb0[7].w
dp4 r1.x, r1.xyzw, r2.xyzw
mad r0.xyzw, r1.xxxx, cb0[13].xyzw, r0.xyzw
mul r1.xyzw, r0.yyyy, cb0[15].xyzw
mad r1.xyzw, r0.xxxx, cb0[14].xyzw, r1.xyzw
mad r1.xyzw, r0.zzzz, cb0[16].xyzw, r1.xyzw
mad r0.xyzw, r0.wwww, cb0[17].xyzw, r1.xyzw
div o0.xyzw, r0.xyzw, r0.wwww
ret 
// Approximately 26 instruction slots used
