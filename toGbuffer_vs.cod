//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer CONSTANT_BUFFER
// {
//
//   row_major float4x4 world_view_projection;// Offset:    0 Size:    64
//   row_major float4x4 world;          // Offset:   64 Size:    64
//   float4 material_color;             // Offset:  128 Size:    16 [unused]
//
// }
//
// cbuffer CBPerFrame3
// {
//
//   float Offset_X;                    // Offset:    0 Size:     4
//   float Offset_Y;                    // Offset:    4 Size:     4
//   float dummy00;                     // Offset:    8 Size:     4 [unused]
//   float dummy01;                     // Offset:   12 Size:     4 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// CONSTANT_BUFFER                   cbuffer      NA          NA            cb0      1 
// CBPerFrame3                       cbuffer      NA          NA            cb3      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// COLOR                    0   xyzw        3     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// COLOR                    0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xy          4     NONE   float   xy  
//
//
// Constant buffer to DX9 shader constant mappings:
//
// Target Reg Buffer  Start Reg # of Regs        Data Conversion
// ---------- ------- --------- --------- ----------------------
// c1         cb0             0         8  ( FLT, FLT, FLT, FLT)
// c9         cb3             0         1  ( FLT, FLT, FLT, FLT)
//
//
// Runtime generated constant mappings:
//
// Target Reg                               Constant Description
// ---------- --------------------------------------------------
// c0                              Vertex Shader position offset
//
//
// Level9 shader bytecode:
//
    vs_2_x
    dcl_texcoord v0
    dcl_texcoord1 v1
    dcl_texcoord2 v2
    dcl_texcoord3 v3
    mul r0.xyz, v0.y, c6
    mad r0.xyz, v0.x, c5, r0
    mad r0.xyz, v0.z, c7, r0
    add oT2.xyz, r0, c8
    mul r0, v1.y, c6
    mad r0, v1.x, c5, r0
    mad r0, v1.z, c7, r0
    dp4 r0.w, r0, r0
    rsq r0.w, r0.w
    mul oT1.xyz, r0.w, r0
    add oT3.xy, v2, c9
    mul r0, v0.y, c2
    mad r0, v0.x, c1, r0
    mad r0, v0.z, c3, r0
    add r0, r0, c4
    mad oPos.xy, r0.w, c0, r0
    mov oPos.zw, r0
    mov oT0, v3

// approximately 18 instruction slots used
vs_4_0
dcl_constantbuffer CB0[8], immediateIndexed
dcl_constantbuffer CB3[1], immediateIndexed
dcl_input v0.xyz
dcl_input v1.xyz
dcl_input v2.xy
dcl_input v3.xyzw
dcl_output_siv o0.xyzw, position
dcl_output o1.xyzw
dcl_output o2.xyz
dcl_output o3.xyz
dcl_output o4.xy
dcl_temps 1
mul r0.xyzw, v0.yyyy, cb0[1].xyzw
mad r0.xyzw, v0.xxxx, cb0[0].xyzw, r0.xyzw
mad r0.xyzw, v0.zzzz, cb0[2].xyzw, r0.xyzw
add o0.xyzw, r0.xyzw, cb0[3].xyzw
mov o1.xyzw, v3.xyzw
mul r0.xyzw, v1.yyyy, cb0[5].xyzw
mad r0.xyzw, v1.xxxx, cb0[4].xyzw, r0.xyzw
mad r0.xyzw, v1.zzzz, cb0[6].xyzw, r0.xyzw
dp4 r0.w, r0.xyzw, r0.xyzw
rsq r0.w, r0.w
mul o2.xyz, r0.wwww, r0.xyzx
mul r0.xyz, v0.yyyy, cb0[5].xyzx
mad r0.xyz, v0.xxxx, cb0[4].xyzx, r0.xyzx
mad r0.xyz, v0.zzzz, cb0[6].xyzx, r0.xyzx
add o3.xyz, r0.xyzx, cb0[7].xyzx
add o4.xy, v2.xyxx, cb3[0].xyxx
ret 
// Approximately 17 instruction slots used
