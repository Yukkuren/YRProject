//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float       
// TEXCOORD                 0   xy          2     NONE   float   xy  
// COLOR                    0   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Runtime generated constant mappings:
//
// Target Reg                               Constant Description
// ---------- --------------------------------------------------
// c0                              Vertex Shader position offset
//
//
// Level9 shader bytecode:
//
    vs_2_x
    def c1, 1, 0, 0, 0
    dcl_texcoord v0  // input<0,1,2>
    dcl_texcoord2 v2  // input<6,7>

#line 7 "E:\ゲーム制作\YRProject\GaussShader_vs.hlsl"
    mul r0, v0.xyzx, c1.xxxy
    add r0, r0, c1.yyyx  // ::Out<0,1,2,3>
    mov r1.xy, v2  // ::Out<4,5>
    mov r0.xy, r0  // ::main<0,1>
    mov oPos.zw, r0  // ::main<2,3>
    mov oT0.xy, r1  // ::main<4,5>

#line 3
    mov r1.x, c1.x
    mul r0.zw, r1.x, c0.xyxy
    add oPos.xy, r0.zwzw, r0  // ::main<0,1>

// approximately 9 instruction slots used
vs_4_0
dcl_input v0.xyz
dcl_input v2.xy
dcl_output_siv o0.xyzw, position
dcl_output o1.xy
dcl_temps 2
//
// Initial variable locations:
//   v0.x <- input.Position.x; v0.y <- input.Position.y; v0.z <- input.Position.z; 
//   v1.x <- input.Normal.x; v1.y <- input.Normal.y; v1.z <- input.Normal.z; 
//   v2.x <- input.Tex.x; v2.y <- input.Tex.y; 
//   v3.x <- input.Color.x; v3.y <- input.Color.y; v3.z <- input.Color.z; v3.w <- input.Color.w; 
//   o1.x <- <main return value>.Tex.x; o1.y <- <main return value>.Tex.y; 
//   o0.x <- <main return value>.Position.x; o0.y <- <main return value>.Position.y; o0.z <- <main return value>.Position.z; o0.w <- <main return value>.Position.w
//
#line 7 "E:\ゲーム制作\YRProject\GaussShader_vs.hlsl"
mov r0.xyz, v0.xyzx  // r0.x <- Out.Position.x; r0.y <- Out.Position.y; r0.z <- Out.Position.z
mov r0.w, l(1.000000)  // r0.w <- Out.Position.w

#line 8
mov r1.xy, v2.xyxx  // r1.x <- Out.Tex.x; r1.y <- Out.Tex.y

#line 10
mov o0.xyzw, r0.xyzw
mov o1.xy, r1.xyxx
ret 
// Approximately 6 instruction slots used
