//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer CONSTANT_BUFFER
// {
//
//   float3 iResolution;                // Offset:    0 Size:    12
//   float iTime;                       // Offset:   12 Size:     4
//   float brightness;                  // Offset:   16 Size:     4 [unused]
//   float ray_brightness;              // Offset:   20 Size:     4 [unused]
//   float gamma;                       // Offset:   24 Size:     4 [unused]
//   float spot_brightness;             // Offset:   28 Size:     4 [unused]
//   float ray_density;                 // Offset:   32 Size:     4 [unused]
//   float curvature;                   // Offset:   36 Size:     4 [unused]
//   float red;                         // Offset:   40 Size:     4 [unused]
//   float green;                       // Offset:   44 Size:     4 [unused]
//   float blue;                        // Offset:   48 Size:     4 [unused]
//   float4 material_color;             // Offset:   64 Size:    16 [unused]
//   float dummy1;                      // Offset:   80 Size:     4 [unused]
//   float dummy2;                      // Offset:   84 Size:     4 [unused]
//   float dummy3;                      // Offset:   88 Size:     4 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// linear_clamp                      sampler      NA          NA             s0      1 
// iChannel0                         texture  float4          2d             t0      1 
// CONSTANT_BUFFER                   cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xy  
// TEXCOORD                 0   xy          1     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
// SV_TARGET                1   xyzw        1   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[1], immediateIndexed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_input_ps_siv linear noperspective v0.xy, position
dcl_output o0.xyzw
dcl_output o1.xyzw
dcl_temps 5
add r0.y, -v0.y, cb0[0].y
mov r0.x, v0.x
mad r0.zw, r0.yyyx, l(0.000000, 0.000000, 2.000000, 2.000000), -cb0[0].yyyx
div r0.xyzw, r0.xyzw, cb0[0].xyyx
dp2 r1.x, r0.zwzz, r0.zwzz
sqrt r1.x, r1.x
mul r1.y, cb0[0].w, l(20.000000)
round_ni r1.y, r1.y
mul r1.y, r1.y, l(0.500000)
mad r2.x, r1.x, l(0.100000), r1.y
min r1.y, |r0.w|, |r0.z|
max r1.z, |r0.w|, |r0.z|
div r1.z, l(1.000000, 1.000000, 1.000000, 1.000000), r1.z
mul r1.y, r1.z, r1.y
mul r1.z, r1.y, r1.y
mad r1.w, r1.z, l(0.020835), l(-0.085133)
mad r1.w, r1.z, r1.w, l(0.180141)
mad r1.w, r1.z, r1.w, l(-0.330299)
mad r1.z, r1.z, r1.w, l(0.999866)
mul r1.w, r1.z, r1.y
lt r2.z, |r0.w|, |r0.z|
mad r1.w, r1.w, l(-2.000000), l(1.570796)
and r1.w, r2.z, r1.w
mad r1.y, r1.y, r1.z, r1.w
lt r1.z, r0.w, -r0.w
and r1.z, r1.z, l(0xc0490fdb)
add r1.y, r1.z, r1.y
min r1.z, r0.w, r0.z
max r0.z, r0.w, r0.z
lt r0.w, r1.z, -r1.z
ge r0.z, r0.z, -r0.z
and r0.z, r0.z, r0.w
movc r0.z, r0.z, -r1.y, r1.y
mul r2.y, r0.z, l(10.000000)
mov r0.zw, l(0,0,0,1)
loop 
  ige r1.y, r0.w, l(7)
  breakc_nz r1.y
  itof r1.y, r0.w
  add r1.zw, r1.yyyy, r2.xxxy
  exp r1.y, r1.y
  add r2.z, r1.y, r1.y
  mul r3.xy, r1.zwzz, r2.zzzz
  round_ni r3.zw, r3.xxxy
  div r3.zw, r3.zzzw, r2.zzzz
  dp2 r2.w, r3.zwzz, l(89.440002, 19.360001, 0.000000, 0.000000)
  sincos r2.w, null, r2.w
  mul r2.w, r2.w, l(22189.220703)
  frc r2.w, r2.w
  mad r4.xyzw, r1.zwzw, r2.zzzz, l(0.000000, 1.000000, 1.000000, 0.000000)
  round_ni r4.xyzw, r4.xyzw
  div r4.xyzw, r4.xyzw, r2.zzzz
  dp2 r3.z, r4.xyxx, l(89.440002, 19.360001, 0.000000, 0.000000)
  sincos r3.z, null, r3.z
  dp2 r3.w, r4.zwzz, l(89.440002, 19.360001, 0.000000, 0.000000)
  sincos r3.w, null, r3.w
  mul r3.zw, r3.zzzw, l(0.000000, 0.000000, 22189.220703, 22189.220703)
  frc r3.zw, r3.zzzw
  mad r1.zw, r1.zzzw, r2.zzzz, l(0.000000, 0.000000, 1.000000, 1.000000)
  round_ni r1.zw, r1.zzzw
  div r1.zw, r1.zzzw, r2.zzzz
  dp2 r1.z, r1.zwzz, l(89.440002, 19.360001, 0.000000, 0.000000)
  sincos r1.z, null, r1.z
  mul r1.z, r1.z, l(22189.220703)
  frc r1.z, r1.z
  ge r4.xy, r3.xyxx, -r3.xyxx
  frc r3.xy, |r3.xyxx|
  movc r3.xy, r4.xyxx, r3.xyxx, -r3.xyxx
  max r3.xy, r3.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
  mad r4.xy, r3.xyxx, l(-2.000000, -2.000000, 0.000000, 0.000000), l(3.000000, 3.000000, 0.000000, 0.000000)
  mul r3.xy, r3.xyxx, r3.xyxx
  mul r3.xy, r3.xyxx, r4.xyxx
  add r1.w, -r2.w, r3.z
  mad r1.w, r3.y, r1.w, r2.w
  add r1.z, -r3.w, r1.z
  mad r1.z, r3.y, r1.z, r3.w
  add r1.z, -r1.w, r1.z
  mad r1.z, r3.x, r1.z, r1.w
  div r1.y, r1.z, r1.y
  add r0.z, r0.z, r1.y
  iadd r0.w, r0.w, l(1)
endloop 
add r0.w, r1.x, l(-1.300000)
add r0.xz, r0.xxzx, l(-0.500000, 0.000000, -0.500000, 0.000000)
mad r0.z, -r0.z, l(2.000000), r0.w
add r0.z, r0.z, l(0.100000)
mul_sat r0.z, r0.z, l(5.000000)
mad r0.w, r0.z, l(-2.000000), l(3.000000)
mul r0.z, r0.z, r0.z
mul r0.z, r0.z, r0.w
mad r1.x, r0.x, cb0[0].z, l(0.500000)
add r1.y, -r0.y, l(1.000000)
sample_indexable(texture2d)(float,float,float,float) r0.xyw, r1.xyxx, t0.xywz, s0
add r1.xyz, -r0.xywx, l(1.000000, 1.000000, 1.000000, 0.000000)
mad o0.xyz, r0.zzzz, r1.xyzx, r0.xywx
mov o0.w, l(1.000000)
mov o1.xyzw, l(0,0,0,0)
ret 
// Approximately 98 instruction slots used
