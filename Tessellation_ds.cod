//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer CONSTANT_BUFFER
// {
//
//   row_major float4x4 world_view_projection;// Offset:    0 Size:    64
//   row_major float4x4 world;          // Offset:   64 Size:    64
//   float4 material_color;             // Offset:  128 Size:    16 [unused]
//   float4 light_direction;            // Offset:  144 Size:    16 [unused]
//   float4 light_color;                // Offset:  160 Size:    16 [unused]
//   float4 ambient_color;              // Offset:  176 Size:    16 [unused]
//   row_major float4x4 bone_transforms[128];// Offset:  192 Size:  8192 [unused]
//   float4 EyePos;                     // Offset: 8384 Size:    16 [unused]
//   row_major float4x4 view;           // Offset: 8400 Size:    64 [unused]
//   row_major float4x4 projection;     // Offset: 8464 Size:    64 [unused]
//   float3 at;                         // Offset: 8528 Size:    12 [unused]
//   float lumi_factor;                 // Offset: 8540 Size:     4 [unused]
//   float Offset_X;                    // Offset: 8544 Size:     4 [unused]
//   float Offset_Y;                    // Offset: 8548 Size:     4 [unused]
//   float dummy00;                     // Offset: 8552 Size:     4 [unused]
//   float dummy01;                     // Offset: 8556 Size:     4 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// WrapSampler                       sampler      NA          NA             s1      1 
// HeightTexture                     texture  float4          2d             t2      1 
// CONSTANT_BUFFER                   cbuffer      NA          NA            cb0      1 
//
//
//
// Patch Constant signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TessFactor            0   x           0  TRIEDGE   float       
// SV_TessFactor            1   x           1  TRIEDGE   float       
// SV_TessFactor            2   x           2  TRIEDGE   float       
// SV_InsideTessFactor      0   x           3   TRIINT   float       
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// COLOR                    0   xyzw        3     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// COLOR                    0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 0   xyz         2     NONE   float   xyz 
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TEXCOORD                 2   xyz         4     NONE   float   xyz 
// TEXCOORD                 3   xyz         5     NONE   float   xyz 
// TEXCOORD                 4   xyz         6     NONE   float   xyz 
//
// Tessellation Domain   # of control points
// -------------------- --------------------
// Triangle                                3
//
ds_5_0
dcl_input_control_point_count 3
dcl_tessellator_domain domain_tri
dcl_globalFlags refactoringAllowed | skipOptimization
dcl_constantbuffer CB0[8], immediateIndexed
dcl_sampler s1, mode_default
dcl_resource_texture2d (float,float,float,float) t2
dcl_input vDomain.xyz
dcl_input vicp[3][0].xyz
dcl_input vicp[3][1].xyz
dcl_input vicp[3][2].xy
dcl_input vicp[3][3].xyz
dcl_output_siv o0.xyzw, position
dcl_output o1.xyzw
dcl_output o2.xyz
dcl_output o3.xy
dcl_output o4.xyz
dcl_output o5.xyz
dcl_output o6.xyz
dcl_temps 8
//
// Initial variable locations:
//   vpc3.x <- input.inner_factor; 
//   vpc0.x <- input.factor[0]; 
//   vpc1.x <- input.factor[1]; 
//   vpc2.x <- input.factor[2]; 
//   vDomain.x <- UV.x; vDomain.y <- UV.y; vDomain.z <- UV.z; 
//   o6.x <- <main return value>.vN.x; o6.y <- <main return value>.vN.y; o6.z <- <main return value>.vN.z; 
//   o5.x <- <main return value>.vB.x; o5.y <- <main return value>.vB.y; o5.z <- <main return value>.vB.z; 
//   o4.x <- <main return value>.vT.x; o4.y <- <main return value>.vT.y; o4.z <- <main return value>.vT.z; 
//   o3.x <- <main return value>.Tex.x; o3.y <- <main return value>.Tex.y; 
//   o2.x <- <main return value>.wPosition.x; o2.y <- <main return value>.wPosition.y; o2.z <- <main return value>.wPosition.z; 
//   o1.x <- <main return value>.Color.x; o1.y <- <main return value>.Color.y; o1.z <- <main return value>.Color.z; o1.w <- <main return value>.Color.w; 
//   o0.x <- <main return value>.Position.x; o0.y <- <main return value>.Position.y; o0.z <- <main return value>.Position.z; o0.w <- <main return value>.Position.w; 
//   vicp[0][0].x <- patch[0].Position.x; vicp[0][0].y <- patch[0].Position.y; vicp[0][0].z <- patch[0].Position.z; 
//   vicp[0][1].x <- patch[0].Normal.x; vicp[0][1].y <- patch[0].Normal.y; vicp[0][1].z <- patch[0].Normal.z; 
//   vicp[0][2].x <- patch[0].Tex.x; vicp[0][2].y <- patch[0].Tex.y; 
//   vicp[0][3].x <- patch[0].Color.x; vicp[0][3].y <- patch[0].Color.y; vicp[0][3].z <- patch[0].Color.z; vicp[0][3].w <- patch[0].Color.w; 
//   vicp[1][0].x <- patch[1].Position.x; vicp[1][0].y <- patch[1].Position.y; vicp[1][0].z <- patch[1].Position.z; 
//   vicp[1][1].x <- patch[1].Normal.x; vicp[1][1].y <- patch[1].Normal.y; vicp[1][1].z <- patch[1].Normal.z; 
//   vicp[1][2].x <- patch[1].Tex.x; vicp[1][2].y <- patch[1].Tex.y; 
//   vicp[1][3].x <- patch[1].Color.x; vicp[1][3].y <- patch[1].Color.y; vicp[1][3].z <- patch[1].Color.z; vicp[1][3].w <- patch[1].Color.w; 
//   vicp[2][0].x <- patch[2].Position.x; vicp[2][0].y <- patch[2].Position.y; vicp[2][0].z <- patch[2].Position.z; 
//   vicp[2][1].x <- patch[2].Normal.x; vicp[2][1].y <- patch[2].Normal.y; vicp[2][1].z <- patch[2].Normal.z; 
//   vicp[2][2].x <- patch[2].Tex.x; vicp[2][2].y <- patch[2].Tex.y; 
//   vicp[2][3].x <- patch[2].Color.x; vicp[2][3].y <- patch[2].Color.y; vicp[2][3].z <- patch[2].Color.z; vicp[2][3].w <- patch[2].Color.w
//
#line 46 "D:\ゲーム制作\YRProject\Tessellation_ds.hlsl"
mul r0.x, vDomain.x, vicp[0][3].x
mul r0.y, vDomain.y, vicp[1][3].y
add r0.x, r0.y, r0.x
mul r0.y, vDomain.z, vicp[2][3].z
add r0.xyzw, r0.yyyy, r0.xxxx  // r0.x <- C.x; r0.y <- C.y; r0.z <- C.z; r0.w <- C.w

#line 48
mul r1.xy, vDomain.xxxx, vicp[0][2].xyxx
mul r1.zw, vDomain.yyyy, vicp[1][2].xxxy
add r1.xy, r1.zwzz, r1.xyxx
mul r1.zw, vDomain.zzzz, vicp[2][2].xxxy
add r1.xy, r1.zwzz, r1.xyxx  // r1.x <- Tex.x; r1.y <- Tex.y

#line 50
mul r2.xyz, vDomain.xxxx, vicp[0][1].xyzx
mul r3.xyz, vDomain.yyyy, vicp[1][1].xyzx
add r2.xyz, r2.xyzx, r3.xyzx
mul r3.xyz, vDomain.zzzz, vicp[2][1].xyzx
add r2.xyz, r2.xyzx, r3.xyzx  // r2.x <- N.x; r2.y <- N.y; r2.z <- N.z

#line 52
mul r3.xyz, r2.xxxx, cb0[4].xyzx
mul r4.xyz, r2.yyyy, cb0[5].xyzx
add r3.xyz, r3.xyzx, r4.xyzx
mul r4.xyz, r2.zzzz, cb0[6].xyzx
add r3.xyz, r3.xyzx, r4.xyzx
dp3 r1.z, r3.xyzx, r3.xyzx
rsq r1.z, r1.z
mul r3.xyz, r1.zzzz, r3.xyzx  // r3.x <- wN.x; r3.y <- wN.y; r3.z <- wN.z

#line 54
mov r3.xyz, r3.xyzx  // r3.x <- vN.x; r3.y <- vN.y; r3.z <- vN.z

#line 55
itof r4.yz, l(0, 0, 1, 0)  // r4.y <- vB.x; r4.z <- vB.y
mov r4.x, l(0.001000)  // r4.x <- vB.z

#line 57
dp3 r1.z, r4.xyzx, r4.xyzx
rsq r1.z, r1.z
mul r4.xyz, r1.zzzz, r4.xyzx

#line 58
mul r5.xyz, r3.zxyz, r4.zxyz
mul r4.xyz, r3.yzxy, r4.xyzx
mov r4.xyz, -r4.xyzx
add r4.xyz, r4.xyzx, r5.xyzx
dp3 r1.z, r4.xyzx, r4.xyzx
rsq r1.z, r1.z
mul r4.xyz, r1.zzzz, r4.xyzx  // r4.x <- vT.x; r4.y <- vT.y; r4.z <- vT.z

#line 59
mul r5.xyz, r3.yzxy, r4.zxyz
mul r6.xyz, r3.zxyz, r4.yzxy
mov r6.xyz, -r6.xyzx
add r5.xyz, r5.xyzx, r6.xyzx
dp3 r1.z, r5.xyzx, r5.xyzx
rsq r1.z, r1.z
mul r5.xyz, r1.zzzz, r5.xyzx  // r5.x <- vB.x; r5.y <- vB.y; r5.z <- vB.z

#line 61
itof r1.z, l(0)
sample_l_indexable(texture2d)(float,float,float,float) r1.z, r1.xyxx, t2.yzxw, s1, r1.z
mov r1.z, r1.z  // r1.z <- H

#line 63
mul r6.xyz, vDomain.xxxx, vicp[0][0].xyzx
mul r7.xyz, vDomain.yyyy, vicp[1][0].xyzx
add r6.xyz, r6.xyzx, r7.xyzx
mul r7.xyz, vDomain.zzzz, vicp[2][0].xyzx
add r6.xyz, r6.xyzx, r7.xyzx  // r6.x <- pos.x; r6.y <- pos.y; r6.z <- pos.z

#line 64
mul r2.xyz, r1.zzzz, r2.xyzx
mul r2.xyz, r2.xyzx, l(0.100000, 0.100000, 0.100000, 0.000000)
add r2.xyz, r2.xyzx, r6.xyzx  // r2.x <- pos.x; r2.y <- pos.y; r2.z <- pos.z

#line 65
mov r2.xyz, r2.xyzx  // r2.x <- P.x; r2.y <- P.y; r2.z <- P.z
mov r1.z, l(1.000000)  // r1.z <- P.w

#line 67
mul r6.xyzw, r2.xxxx, cb0[0].xyzw
mul r7.xyzw, r2.yyyy, cb0[1].xyzw
add r6.xyzw, r6.xyzw, r7.xyzw
mul r7.xyzw, r2.zzzz, cb0[2].xyzw
add r6.xyzw, r6.xyzw, r7.xyzw
mul r7.xyzw, r1.zzzz, cb0[3].xyzw
add r6.xyzw, r6.xyzw, r7.xyzw  // r6.x <- output.Position.x; r6.y <- output.Position.y; r6.z <- output.Position.z; r6.w <- output.Position.w

#line 68
mul r7.xyz, r2.xxxx, cb0[4].xyzx
mul r2.xyw, r2.yyyy, cb0[5].xyxz
add r2.xyw, r2.xyxw, r7.xyxz
mul r7.xyz, r2.zzzz, cb0[6].xyzx
add r2.xyz, r2.xywx, r7.xyzx
mul r7.xyz, r1.zzzz, cb0[7].xyzx
add r2.xyz, r2.xyzx, r7.xyzx  // r2.x <- output.wPosition.x; r2.y <- output.wPosition.y; r2.z <- output.wPosition.z

#line 69
mov r0.xyzw, r0.xyzw  // r0.x <- output.Color.x; r0.y <- output.Color.y; r0.z <- output.Color.z; r0.w <- output.Color.w

#line 70
mov r1.xy, r1.xyxx  // r1.x <- output.Tex.x; r1.y <- output.Tex.y

#line 72
mov r4.xyz, r4.xyzx  // r4.x <- output.vT.x; r4.y <- output.vT.y; r4.z <- output.vT.z

#line 73
mov r5.xyz, r5.xyzx  // r5.x <- output.vB.x; r5.y <- output.vB.y; r5.z <- output.vB.z

#line 74
mov r3.xyz, r3.xyzx  // r3.x <- output.vN.x; r3.y <- output.vN.y; r3.z <- output.vN.z

#line 75
mov o0.xyzw, r6.xyzw
mov o1.xyzw, r0.xyzw
mov o2.xyz, r2.xyzx
mov o4.xyz, r4.xyzx
mov o5.xyz, r5.xyzx
mov o6.xyz, r3.xyzx
mov o3.xy, r1.xyxx
ret 
// Approximately 83 instruction slots used
