//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer CONSTANT_BUFFER
// {
//
//   row_major float4x4 world_view_projection;// Offset:    0 Size:    64 [unused]
//   row_major float4x4 world;          // Offset:   64 Size:    64
//   float4 material_color;             // Offset:  128 Size:    16 [unused]
//   float4 EyePos;                     // Offset:  144 Size:    16
//   row_major float4x4 view;           // Offset:  160 Size:    64
//   row_major float4x4 projection;     // Offset:  224 Size:    64
//   float3 at;                         // Offset:  288 Size:    12
//   float dummy;                       // Offset:  300 Size:     4 [unused]
//   float4 dummy2;                     // Offset:  304 Size:    16 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// CONSTANT_BUFFER                   cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// TEXCOORD                 0   xy          1     NONE   float   xy  
// ALPHA                    0   x           2     NONE   float   x   
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
// ALPHA                    0     z         1     NONE   float     z 
//
vs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[19], immediateIndexed
dcl_input v0.xyz
dcl_input v1.xy
dcl_input v2.x
dcl_output_siv o0.xyzw, position
dcl_output o1.xy
dcl_output o1.z
dcl_temps 4
mul r0.xyz, v0.yyyy, cb0[5].xyzx
mad r0.xyz, v0.xxxx, cb0[4].xyzx, r0.xyzx
mad r0.xyz, v0.zzzz, cb0[6].xyzx, r0.xyzx
add r0.xyz, r0.xyzx, cb0[7].xyzx
add r1.xyz, r0.xyzx, -cb0[9].xyzx
dp3 r0.w, cb0[18].xyzx, r1.xyzx
mad r1.xyz, cb0[18].xyzx, r0.wwww, cb0[9].xyzx
mul r2.xyz, r0.wwww, cb0[18].xyzx
dp3 r0.w, r2.xyzx, r2.xyzx
add r0.xyz, r0.xyzx, -r1.xyzx
dp3 r0.x, r0.xyzx, r0.xyzx
sqrt r0.xw, r0.xxxw
div r0.x, r0.x, r0.w
max r0.x, r0.x, l(0.050000)
mul r1.x, r0.x, cb0[4].z
mul r1.y, r0.x, cb0[5].z
mul r1.z, r0.x, cb0[6].z
mul r1.w, r0.x, cb0[7].z
mov r0.xyz, v0.xyzx
mov r0.w, l(1.000000)
dp4 r1.x, r0.xyzw, r1.xyzw
mov r2.x, cb0[4].y
mov r2.y, cb0[5].y
mov r2.z, cb0[6].y
mov r2.w, cb0[7].y
dp4 r1.y, r0.xyzw, r2.xyzw
mul r2.xyzw, r1.yyyy, cb0[11].xyzw
mov r3.x, cb0[4].x
mov r3.y, cb0[5].x
mov r3.z, cb0[6].x
mov r3.w, cb0[7].x
dp4 r1.y, r0.xyzw, r3.xyzw
mad r2.xyzw, r1.yyyy, cb0[10].xyzw, r2.xyzw
mad r1.xyzw, r1.xxxx, cb0[12].xyzw, r2.xyzw
mov r2.x, cb0[4].w
mov r2.y, cb0[5].w
mov r2.z, cb0[6].w
mov r2.w, cb0[7].w
dp4 r0.x, r0.xyzw, r2.xyzw
mad r0.xyzw, r0.xxxx, cb0[13].xyzw, r1.xyzw
mul r1.xyzw, r0.yyyy, cb0[15].xyzw
mad r1.xyzw, r0.xxxx, cb0[14].xyzw, r1.xyzw
mad r1.xyzw, r0.zzzz, cb0[16].xyzw, r1.xyzw
mad r0.xyzw, r0.wwww, cb0[17].xyzw, r1.xyzw
div o0.xyzw, r0.xyzw, r0.wwww
mov o1.xy, v1.xyxx
mov o1.z, v2.x
ret 
// Approximately 48 instruction slots used
