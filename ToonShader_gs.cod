//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer CONSTANT_BUFFER
// {
//
//   row_major float4x4 world_view_projection;// Offset:    0 Size:    64
//   row_major float4x4 world;          // Offset:   64 Size:    64
//   float4 material_color;             // Offset:  128 Size:    16 [unused]
//   float4 light_direction;            // Offset:  144 Size:    16 [unused]
//   float4 light_color;                // Offset:  160 Size:    16 [unused]
//   float4 ambient_color;              // Offset:  176 Size:    16 [unused]
//   row_major float4x4 bone_transforms[128];// Offset:  192 Size:  8192 [unused]
//   float4 EyePos;                     // Offset: 8384 Size:    16 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// CONSTANT_BUFFER                   cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// COLOR                    0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyz         4     NONE   float   xyz 
// TEXCOORD                 2   xyz         5     NONE   float   xyz 
// SV_PrimitiveID           0    N/A   primID   PRIMID    uint     NO
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// POSITION                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 0   xy          2     NONE   float   xy  
// COLOR                    0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyz         4     NONE   float   xyz 
// TEXCOORD                 2   xyz         5     NONE   float   xyz 
//
gs_5_0
dcl_globalFlags refactoringAllowed | skipOptimization
dcl_constantbuffer CB0[8], immediateIndexed
dcl_input v[3][0].xyzw
dcl_input v[3][1].xyz
dcl_input v[3][2].xy
dcl_input v[3][3].xyzw
dcl_input v[3][4].xyz
dcl_input v[3][5].xyz
dcl_input vPrim
dcl_temps 8
dcl_inputprimitive triangle 
dcl_stream m0
dcl_outputtopology trianglestrip 
dcl_output_siv o0.xyzw, position
dcl_output o1.xyzw
dcl_output o2.xy
dcl_output o3.xyzw
dcl_output o4.xyz
dcl_output o5.xyz
dcl_maxout 6
//
// Initial variable locations:
//   vPrim <- primID; 
//   m0 <- Stream; 
//   v[0][0].x <- input[0].Position.x; v[0][0].y <- input[0].Position.y; v[0][0].z <- input[0].Position.z; v[0][0].w <- input[0].Position.w; 
//   v[0][1].x <- input[0].Normal.x; v[0][1].y <- input[0].Normal.y; v[0][1].z <- input[0].Normal.z; 
//   v[0][2].x <- input[0].Tex.x; v[0][2].y <- input[0].Tex.y; 
//   v[0][3].x <- input[0].Color.x; v[0][3].y <- input[0].Color.y; v[0][3].z <- input[0].Color.z; v[0][3].w <- input[0].Color.w; 
//   v[0][4].x <- input[0].wNormal.x; v[0][4].y <- input[0].wNormal.y; v[0][4].z <- input[0].wNormal.z; 
//   v[0][5].x <- input[0].wPos.x; v[0][5].y <- input[0].wPos.y; v[0][5].z <- input[0].wPos.z; 
//   v[1][0].x <- input[1].Position.x; v[1][0].y <- input[1].Position.y; v[1][0].z <- input[1].Position.z; v[1][0].w <- input[1].Position.w; 
//   v[1][1].x <- input[1].Normal.x; v[1][1].y <- input[1].Normal.y; v[1][1].z <- input[1].Normal.z; 
//   v[1][2].x <- input[1].Tex.x; v[1][2].y <- input[1].Tex.y; 
//   v[1][3].x <- input[1].Color.x; v[1][3].y <- input[1].Color.y; v[1][3].z <- input[1].Color.z; v[1][3].w <- input[1].Color.w; 
//   v[1][4].x <- input[1].wNormal.x; v[1][4].y <- input[1].wNormal.y; v[1][4].z <- input[1].wNormal.z; 
//   v[1][5].x <- input[1].wPos.x; v[1][5].y <- input[1].wPos.y; v[1][5].z <- input[1].wPos.z; 
//   v[2][0].x <- input[2].Position.x; v[2][0].y <- input[2].Position.y; v[2][0].z <- input[2].Position.z; v[2][0].w <- input[2].Position.w; 
//   v[2][1].x <- input[2].Normal.x; v[2][1].y <- input[2].Normal.y; v[2][1].z <- input[2].Normal.z; 
//   v[2][2].x <- input[2].Tex.x; v[2][2].y <- input[2].Tex.y; 
//   v[2][3].x <- input[2].Color.x; v[2][3].y <- input[2].Color.y; v[2][3].z <- input[2].Color.z; v[2][3].w <- input[2].Color.w; 
//   v[2][4].x <- input[2].wNormal.x; v[2][4].y <- input[2].wNormal.y; v[2][4].z <- input[2].wNormal.z; 
//   v[2][5].x <- input[2].wPos.x; v[2][5].y <- input[2].wPos.y; v[2][5].z <- input[2].wPos.z
//
#line 3 "E:\ゲーム制作\YRProject\ToonShader.hlsli"
mov r0.x, l(0.010000)  // r0.x <- LW

#line 4
itof r1.xyzw, l(0, 0, 0, -1)  // r1.x <- LC.x; r1.y <- LC.y; r1.z <- LC.z; r1.w <- LC.w

#line 11 "E:\ゲーム制作\YRProject\ToonShader_gs.hlsl"
mov r0.y, l(0)  // r0.y <- i
mov r0.z, r0.y  // r0.z <- i
loop 
  ilt r0.w, r0.z, l(3)
  breakc_z r0.w

#line 15
  mul r2.xyzw, cb0[0].xyzw, v[r0.z + 0][0].xxxx
  mul r3.xyzw, cb0[1].xyzw, v[r0.z + 0][0].yyyy
  add r2.xyzw, r2.xyzw, r3.xyzw
  mul r3.xyzw, cb0[2].xyzw, v[r0.z + 0][0].zzzz
  add r2.xyzw, r2.xyzw, r3.xyzw
  mul r3.xyzw, cb0[3].xyzw, v[r0.z + 0][0].wwww
  add r2.xyzw, r2.xyzw, r3.xyzw  // r2.x <- data.SV_Position.x; r2.y <- data.SV_Position.y; r2.z <- data.SV_Position.z; r2.w <- data.SV_Position.w

#line 16
  div r2.xyzw, r2.xyzw, r2.wwww

#line 17
  mul r3.xyzw, cb0[4].xyzw, v[r0.z + 0][0].xxxx
  mul r4.xyzw, cb0[5].xyzw, v[r0.z + 0][0].yyyy
  add r3.xyzw, r3.xyzw, r4.xyzw
  mul r4.xyzw, cb0[6].xyzw, v[r0.z + 0][0].zzzz
  add r3.xyzw, r3.xyzw, r4.xyzw
  mul r4.xyzw, cb0[7].xyzw, v[r0.z + 0][0].wwww
  add r3.xyzw, r3.xyzw, r4.xyzw  // r3.x <- data.Position.x; r3.y <- data.Position.y; r3.z <- data.Position.z; r3.w <- data.Position.w

#line 18
  mov r4.xyz, v[r0.z + 0][4].xyzx  // r4.x <- data.wNormal.x; r4.y <- data.wNormal.y; r4.z <- data.wNormal.z

#line 19
  mov r5.xy, v[r0.z + 0][2].xyxx  // r5.x <- data.Tex.x; r5.y <- data.Tex.y

#line 20
  mov r6.xyzw, v[r0.z + 0][3].xyzw  // r6.x <- data.Color.x; r6.y <- data.Color.y; r6.z <- data.Color.z; r6.w <- data.Color.w

#line 21
  mov r7.xyz, v[r0.z + 0][5].xyzx  // r7.x <- data.wPos.x; r7.y <- data.wPos.y; r7.z <- data.wPos.z

#line 23
  mov o0.xyzw, r2.xyzw
  mov o1.xyzw, r3.xyzw
  mov o2.xy, r5.xyxx
  mov o3.xyzw, r6.xyzw
  mov o4.xyz, r4.xyzx
  mov o5.xyz, r7.xyzx
  emit_stream m0

#line 24
  iadd r0.z, r0.z, l(1)
endloop 

#line 26
cut_stream m0

#line 32
mov r2.xyz, v[0][1].xyzx
mov r2.w, l(0)
mul r2.xyzw, r0.xxxx, r2.xyzw
add r2.xyzw, r2.xyzw, v[0][0].xyzw  // r2.x <- P.x; r2.y <- P.y; r2.z <- P.z; r2.w <- P.w

#line 33
mul r3.xyzw, r2.xxxx, cb0[0].xyzw
mul r4.xyzw, r2.yyyy, cb0[1].xyzw
add r3.xyzw, r3.xyzw, r4.xyzw
mul r4.xyzw, r2.zzzz, cb0[2].xyzw
add r3.xyzw, r3.xyzw, r4.xyzw
mul r2.xyzw, r2.wwww, cb0[3].xyzw
add r2.xyzw, r2.xyzw, r3.xyzw  // r2.x <- data.SV_Position.x; r2.y <- data.SV_Position.y; r2.z <- data.SV_Position.z; r2.w <- data.SV_Position.w

#line 34
div r2.xyzw, r2.xyzw, r2.wwww

#line 35
mul r3.xyzw, cb0[4].xyzw, v[0][0].xxxx
mul r4.xyzw, cb0[5].xyzw, v[0][0].yyyy
add r3.xyzw, r3.xyzw, r4.xyzw
mul r4.xyzw, cb0[6].xyzw, v[0][0].zzzz
add r3.xyzw, r3.xyzw, r4.xyzw
mul r4.xyzw, cb0[7].xyzw, v[0][0].wwww
add r3.xyzw, r3.xyzw, r4.xyzw  // r3.x <- data.Position.x; r3.y <- data.Position.y; r3.z <- data.Position.z; r3.w <- data.Position.w

#line 36
mov r0.yzw, -v[0][4].xxyz  // r0.y <- data.wNormal.x; r0.z <- data.wNormal.y; r0.w <- data.wNormal.z

#line 37
mov r4.xy, v[0][2].xyxx  // r4.x <- data.Tex.x; r4.y <- data.Tex.y

#line 38
mov r1.xyzw, r1.xyzw  // r1.x <- data.Color.x; r1.y <- data.Color.y; r1.z <- data.Color.z; r1.w <- data.Color.w

#line 39
mov r5.xyz, v[0][5].xyzx  // r5.x <- data.wPos.x; r5.y <- data.wPos.y; r5.z <- data.wPos.z

#line 41
mov o0.xyzw, r2.xyzw
mov o1.xyzw, r3.xyzw
mov o2.xy, r4.xyxx
mov o3.xyzw, r1.xyzw
mov o4.xyz, r0.yzwy
mov o5.xyz, r5.xyzx
emit_stream m0

#line 42
mov r2.xyz, v[2][1].xyzx
mov r2.w, l(0)
mul r2.xyzw, r0.xxxx, r2.xyzw
add r2.xyzw, r2.xyzw, v[2][0].xyzw  // r2.x <- P.x; r2.y <- P.y; r2.z <- P.z; r2.w <- P.w

#line 43
mul r3.xyzw, r2.xxxx, cb0[0].xyzw
mul r4.xyzw, r2.yyyy, cb0[1].xyzw
add r3.xyzw, r3.xyzw, r4.xyzw
mul r4.xyzw, r2.zzzz, cb0[2].xyzw
add r3.xyzw, r3.xyzw, r4.xyzw
mul r2.xyzw, r2.wwww, cb0[3].xyzw
add r2.xyzw, r2.xyzw, r3.xyzw  // r2.x <- data.SV_Position.x; r2.y <- data.SV_Position.y; r2.z <- data.SV_Position.z; r2.w <- data.SV_Position.w

#line 44
div r2.xyzw, r2.xyzw, r2.wwww

#line 45
mul r3.xyzw, cb0[4].xyzw, v[2][0].xxxx
mul r4.xyzw, cb0[5].xyzw, v[2][0].yyyy
add r3.xyzw, r3.xyzw, r4.xyzw
mul r4.xyzw, cb0[6].xyzw, v[2][0].zzzz
add r3.xyzw, r3.xyzw, r4.xyzw
mul r4.xyzw, cb0[7].xyzw, v[2][0].wwww
add r3.xyzw, r3.xyzw, r4.xyzw  // r3.x <- data.Position.x; r3.y <- data.Position.y; r3.z <- data.Position.z; r3.w <- data.Position.w

#line 46
mov r0.yzw, -v[2][4].xxyz

#line 47
mov r4.xy, v[2][2].xyxx  // r4.x <- data.Tex.x; r4.y <- data.Tex.y

#line 49
mov r5.xyz, v[2][5].xyzx

#line 50
mov o0.xyzw, r2.xyzw
mov o1.xyzw, r3.xyzw
mov o2.xy, r4.xyxx
mov o3.xyzw, r1.xyzw
mov o4.xyz, r0.yzwy
mov o5.xyz, r5.xyzx
emit_stream m0

#line 52
mov r2.xyz, v[1][1].xyzx
mov r2.w, l(0)
mul r0.xyzw, r0.xxxx, r2.xyzw
add r0.xyzw, r0.xyzw, v[1][0].xyzw  // r0.x <- P.x; r0.y <- P.y; r0.z <- P.z; r0.w <- P.w

#line 53
mul r2.xyzw, r0.xxxx, cb0[0].xyzw
mul r3.xyzw, r0.yyyy, cb0[1].xyzw
add r2.xyzw, r2.xyzw, r3.xyzw
mul r3.xyzw, r0.zzzz, cb0[2].xyzw
add r2.xyzw, r2.xyzw, r3.xyzw
mul r0.xyzw, r0.wwww, cb0[3].xyzw
add r0.xyzw, r0.xyzw, r2.xyzw  // r0.x <- data.SV_Position.x; r0.y <- data.SV_Position.y; r0.z <- data.SV_Position.z; r0.w <- data.SV_Position.w

#line 54
div r0.xyzw, r0.xyzw, r0.wwww

#line 55
mul r2.xyzw, cb0[4].xyzw, v[1][0].xxxx
mul r3.xyzw, cb0[5].xyzw, v[1][0].yyyy
add r2.xyzw, r2.xyzw, r3.xyzw
mul r3.xyzw, cb0[6].xyzw, v[1][0].zzzz
add r2.xyzw, r2.xyzw, r3.xyzw
mul r3.xyzw, cb0[7].xyzw, v[1][0].wwww
add r2.xyzw, r2.xyzw, r3.xyzw  // r2.x <- data.Position.x; r2.y <- data.Position.y; r2.z <- data.Position.z; r2.w <- data.Position.w

#line 56
mov r3.xyz, -v[1][4].xyzx  // r3.x <- data.wNormal.x; r3.y <- data.wNormal.y; r3.z <- data.wNormal.z

#line 57
mov r4.xy, v[1][2].xyxx

#line 59
mov r5.xyz, v[1][5].xyzx

#line 60
mov o0.xyzw, r0.xyzw
mov o1.xyzw, r2.xyzw
mov o2.xy, r4.xyxx
mov o3.xyzw, r1.xyzw
mov o4.xyz, r3.xyzx
mov o5.xyz, r5.xyzx
emit_stream m0

#line 62
cut_stream m0

#line 63
ret 
// Approximately 126 instruction slots used
