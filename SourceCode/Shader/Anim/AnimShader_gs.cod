//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer CBPerFrame
// {
//
//   row_major float4x4 View;           // Offset:    0 Size:    64
//   row_major float4x4 Projection;     // Offset:   64 Size:    64
//   row_major float4x4 SR;             // Offset:  128 Size:    64
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// CBPerFrame                        cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// TEXCOORD                 0   xy          1     NONE   float   xy  
// UV_POS                   0     zw        1     NONE   float     zw
// UV_SIZE                  0   xy          2     NONE   float   xy  
// COLOR                    0   xyzw        3     NONE   float      w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
// COLOR                    0   xyzw        2     NONE   float   xyzw
//
gs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[10], immediateIndexed
dcl_input v[1][0].xyz
dcl_input v[1][1].xy
dcl_input v[1][1].zw
dcl_input v[1][2].xy
dcl_input v[1][3].xyzw
dcl_temps 4
dcl_inputprimitive point 
dcl_stream m0
dcl_outputtopology trianglestrip 
dcl_output_siv o0.xyzw, position
dcl_output o1.xy
dcl_output o2.xyzw
dcl_maxout 4
mul r0.xyzw, cb0[9].xyzw, v[0][1].yyyy
mad r1.xyzw, -v[0][1].xxxx, cb0[8].xyzw, r0.xyzw
mad r0.xyzw, v[0][1].xxxx, cb0[8].xyzw, r0.xyzw
mul r2.xyzw, cb0[1].xyzw, v[0][0].yyyy
mad r2.xyzw, v[0][0].xxxx, cb0[0].xyzw, r2.xyzw
mad r2.xyzw, v[0][0].zzzz, cb0[2].xyzw, r2.xyzw
add r2.xyzw, r2.xyzw, cb0[3].xyzw
add r1.xyzw, r1.xyzw, r2.xyzw
mul r3.xyzw, r1.yyyy, cb0[5].xyzw
mad r3.xyzw, r1.xxxx, cb0[4].xyzw, r3.xyzw
mad r3.xyzw, r1.zzzz, cb0[6].xyzw, r3.xyzw
mad r1.xyzw, r1.wwww, cb0[7].xyzw, r3.xyzw
div r1.xyzw, r1.xyzw, r1.wwww
mov o0.xyzw, r1.xyzw
mov o1.xy, v[0][1].zwzz
mov o2.xyz, l(1.000000,1.000000,1.000000,0)
mov o2.w, v[0][3].w
emit_stream m0
add r0.xyzw, r0.xyzw, r2.xyzw
mul r1.xyzw, r0.yyyy, cb0[5].xyzw
mad r1.xyzw, r0.xxxx, cb0[4].xyzw, r1.xyzw
mad r1.xyzw, r0.zzzz, cb0[6].xyzw, r1.xyzw
mad r0.xyzw, r0.wwww, cb0[7].xyzw, r1.xyzw
div r0.xyzw, r0.xyzw, r0.wwww
mov o0.xyzw, r0.xyzw
add r0.xy, v[0][1].zwzz, v[0][2].xyxx
mov o1.x, r0.x
mov o1.y, v[0][1].w
mov o2.xyz, l(1.000000,1.000000,1.000000,0)
mov o2.w, v[0][3].w
emit_stream m0
mul r1.xyzw, cb0[9].xyzw, -v[0][1].yyyy
mad r3.xyzw, -v[0][1].xxxx, cb0[8].xyzw, r1.xyzw
mad r1.xyzw, v[0][1].xxxx, cb0[8].xyzw, r1.xyzw
add r1.xyzw, r1.xyzw, r2.xyzw
add r2.xyzw, r2.xyzw, r3.xyzw
mul r3.xyzw, r2.yyyy, cb0[5].xyzw
mad r3.xyzw, r2.xxxx, cb0[4].xyzw, r3.xyzw
mad r3.xyzw, r2.zzzz, cb0[6].xyzw, r3.xyzw
mad r2.xyzw, r2.wwww, cb0[7].xyzw, r3.xyzw
div r2.xyzw, r2.xyzw, r2.wwww
mov o0.xyzw, r2.xyzw
mov o1.x, v[0][1].z
mov o1.y, r0.y
mov o2.xyz, l(1.000000,1.000000,1.000000,0)
mov o2.w, v[0][3].w
emit_stream m0
mul r2.xyzw, r1.yyyy, cb0[5].xyzw
mad r2.xyzw, r1.xxxx, cb0[4].xyzw, r2.xyzw
mad r2.xyzw, r1.zzzz, cb0[6].xyzw, r2.xyzw
mad r1.xyzw, r1.wwww, cb0[7].xyzw, r2.xyzw
div r1.xyzw, r1.xyzw, r1.wwww
mov o0.xyzw, r1.xyzw
mov o1.xy, r0.xyxx
mov o2.xyz, l(1.000000,1.000000,1.000000,0)
mov o2.w, v[0][3].w
emit_stream m0
cut_stream m0
ret 
// Approximately 59 instruction slots used
