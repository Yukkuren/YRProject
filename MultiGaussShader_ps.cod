//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// ColorSampler                      sampler      NA          NA             s0      1 
// ColorBuffer0                      texture  float4          2d             t0      1 
// ColorBuffer1                      texture  float4          2d             t1      1 
// ColorBuffer2                      texture  float4          2d             t2      1 
// ColorBuffer3                      texture  float4          2d             t3      1 
// ColorBuffer4                      texture  float4          2d             t4      1 
// ColorBuffer5                      texture  float4          2d             t5      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed | skipOptimization
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t5
dcl_input_ps linear v1.xy
dcl_output o0.xyzw
dcl_temps 3
//
// Initial variable locations:
//   v0.x <- input.Position.x; v0.y <- input.Position.y; v0.z <- input.Position.z; v0.w <- input.Position.w; 
//   v1.x <- input.TexCoord.x; v1.y <- input.TexCoord.y; 
//   o0.x <- <main return value>.x; o0.y <- <main return value>.y; o0.z <- <main return value>.z; o0.w <- <main return value>.w
//
#line 12 "E:\ゲーム制作\YRProject\MultiGaussShader_ps.hlsl"
itof r0.xyz, l(0, 0, 0, 0)  // r0.x <- result.x; r0.y <- result.y; r0.z <- result.z

#line 13
nop 
nop 
mov r1.xy, v1.xyxx

#line 5
itof r2.xyz, l(0, 0, 0, 0)  // r2.x <- output.x; r2.y <- output.y; r2.z <- output.z

#line 6
itof r0.w, l(0)
sample_l_indexable(texture2d)(float,float,float,float) r1.xyz, r1.xyxx, t0.xyzw, s0, r0.w
add r1.xyz, r1.xyzx, r2.xyzx  // r1.x <- output.x; r1.y <- output.y; r1.z <- output.z

#line 7
mov r1.xyz, r1.xyzx  // r1.x <- <FetchColor return value>.x; r1.y <- <FetchColor return value>.y; r1.z <- <FetchColor return value>.z

#line 13
add r0.xyz, r0.xyzx, r1.xyzx

#line 14
nop 
nop 
mov r1.xy, v1.xyxx

#line 5
itof r2.xyz, l(0, 0, 0, 0)  // r2.x <- output.x; r2.y <- output.y; r2.z <- output.z

#line 6
itof r0.w, l(0)
sample_l_indexable(texture2d)(float,float,float,float) r1.xyz, r1.xyxx, t1.xyzw, s0, r0.w
add r1.xyz, r1.xyzx, r2.xyzx  // r1.x <- output.x; r1.y <- output.y; r1.z <- output.z

#line 7
mov r1.xyz, r1.xyzx  // r1.x <- <FetchColor return value>.x; r1.y <- <FetchColor return value>.y; r1.z <- <FetchColor return value>.z

#line 14
add r0.xyz, r0.xyzx, r1.xyzx

#line 15
nop 
nop 
mov r1.xy, v1.xyxx

#line 5
itof r2.xyz, l(0, 0, 0, 0)  // r2.x <- output.x; r2.y <- output.y; r2.z <- output.z

#line 6
itof r0.w, l(0)
sample_l_indexable(texture2d)(float,float,float,float) r1.xyz, r1.xyxx, t2.xyzw, s0, r0.w
add r1.xyz, r1.xyzx, r2.xyzx  // r1.x <- output.x; r1.y <- output.y; r1.z <- output.z

#line 7
mov r1.xyz, r1.xyzx  // r1.x <- <FetchColor return value>.x; r1.y <- <FetchColor return value>.y; r1.z <- <FetchColor return value>.z

#line 15
add r0.xyz, r0.xyzx, r1.xyzx

#line 16
nop 
nop 
mov r1.xy, v1.xyxx

#line 5
itof r2.xyz, l(0, 0, 0, 0)  // r2.x <- output.x; r2.y <- output.y; r2.z <- output.z

#line 6
itof r0.w, l(0)
sample_l_indexable(texture2d)(float,float,float,float) r1.xyz, r1.xyxx, t3.xyzw, s0, r0.w
add r1.xyz, r1.xyzx, r2.xyzx  // r1.x <- output.x; r1.y <- output.y; r1.z <- output.z

#line 7
mov r1.xyz, r1.xyzx  // r1.x <- <FetchColor return value>.x; r1.y <- <FetchColor return value>.y; r1.z <- <FetchColor return value>.z

#line 16
add r0.xyz, r0.xyzx, r1.xyzx

#line 17
nop 
nop 
mov r1.xy, v1.xyxx

#line 5
itof r2.xyz, l(0, 0, 0, 0)  // r2.x <- output.x; r2.y <- output.y; r2.z <- output.z

#line 6
itof r0.w, l(0)
sample_l_indexable(texture2d)(float,float,float,float) r1.xyz, r1.xyxx, t4.xyzw, s0, r0.w
add r1.xyz, r1.xyzx, r2.xyzx  // r1.x <- output.x; r1.y <- output.y; r1.z <- output.z

#line 7
mov r1.xyz, r1.xyzx  // r1.x <- <FetchColor return value>.x; r1.y <- <FetchColor return value>.y; r1.z <- <FetchColor return value>.z

#line 17
add r0.xyz, r0.xyzx, r1.xyzx

#line 18
nop 
nop 
mov r1.xy, v1.xyxx

#line 5
itof r2.xyz, l(0, 0, 0, 0)  // r2.x <- output.x; r2.y <- output.y; r2.z <- output.z

#line 6
itof r0.w, l(0)
sample_l_indexable(texture2d)(float,float,float,float) r1.xyz, r1.xyxx, t5.xyzw, s0, r0.w
add r1.xyz, r1.xyzx, r2.xyzx  // r1.x <- output.x; r1.y <- output.y; r1.z <- output.z

#line 7
mov r1.xyz, r1.xyzx  // r1.x <- <FetchColor return value>.x; r1.y <- <FetchColor return value>.y; r1.z <- <FetchColor return value>.z

#line 18
add r0.xyz, r0.xyzx, r1.xyzx

#line 21
mov r0.w, l(1.000000)  // r0.w <- result.w

#line 22
mov o0.xyz, r0.xyzx
mov o0.w, r0.w
ret 
// Approximately 59 instruction slots used
